-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Anamakine: 127.0.0.1
-- Üretim Zamanı: 22 Eki 2018, 18:39:57
-- Sunucu sürümü: 10.1.36-MariaDB
-- PHP Sürümü: 7.2.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Veritabanı: `blog`
--

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `ayar`
--

CREATE TABLE `ayar` (
  `id` int(10) UNSIGNED NOT NULL,
  `tema` varchar(255) COLLATE utf8_turkish_ci NOT NULL,
  `twitter` varchar(255) COLLATE utf8_turkish_ci NOT NULL,
  `github` varchar(150) COLLATE utf8_turkish_ci NOT NULL,
  `linkedin` varchar(150) COLLATE utf8_turkish_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_turkish_ci;

--
-- Tablo döküm verisi `ayar`
--

INSERT INTO `ayar` (`id`, `tema`, `twitter`, `github`, `linkedin`, `created_at`, `updated_at`) VALUES
(1, 'bootstrap', 'twitter', 'github', 'linkedin', '2018-10-21 12:04:54', '2018-10-22 13:30:34');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `categories`
--

CREATE TABLE `categories` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `picture` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `sira` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `categories`
--

INSERT INTO `categories` (`id`, `name`, `slug`, `picture`, `created_at`, `updated_at`, `sira`) VALUES
(1, 'Selenium', 'Selenium', 'Selenium.png', NULL, '2018-10-11 09:55:22', 0),
(3, 'Cucumber', 'Cucumber', 'Cucumber.png', NULL, '2018-10-11 09:56:23', 1),
(4, 'Appium', 'Appium', 'Appium.png', NULL, '2018-10-11 09:55:56', 3),
(7, 'LARAVEL', 'LARAVEL', 'LARAVEL.png', NULL, '2018-10-11 09:54:31', 2),
(26, 'Kotlin', 'kotlin', 'Kotlin.png', '2018-10-11 03:38:38', '2018-10-11 03:38:38', 0);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `comments`
--

CREATE TABLE `comments` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `approved` tinyint(1) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `post_id` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `comments`
--

INSERT INTO `comments` (`id`, `name`, `email`, `comment`, `approved`, `created_at`, `updated_at`, `post_id`) VALUES
(1, 'Lorem Ipsum', 'lorem@ipsum.com', 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n', 1, '2018-01-20 08:49:20', '2018-10-12 06:56:24', 1),
(3, 'Lorem Ipsum', 'lorem@ipsum.com', 'Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum 2', 1, '2018-09-11 08:55:20', '2018-10-13 07:35:46', 28),
(5, 'Lorem Ipsum', 'lorem@ipsum.com', '1Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum 1', 1, '2018-10-22 08:30:10', '2018-10-22 10:13:13', 28);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `migrations`
--

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1, '2014_10_12_000000_create_users_table', 1),
(2, '2014_10_12_100000_create_password_resets_table', 1),
(3, '2016_02_06_175142_create_posts_table', 1),
(4, '2016_04_28_021908_create_categories_table', 1),
(5, '2018_10_07_075442_create_tags_table', 2),
(6, '2018_10_07_080133_create_post_tag_table', 3),
(7, '2018_10_07_104534_create_comments_table', 4),
(8, '2018_10_14_131920_create_settings_table', 5),
(11, '2018_10_21_145354_create_ayar_table', 6);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `password_resets`
--

INSERT INTO `password_resets` (`email`, `token`, `created_at`) VALUES
('asenocak@netas.com.tr', '$2y$10$xKMmAJEwu5OVH/9Y1QWNIuFiRJxCmYvjy3Ieotjhl11HlFYUaFn.O', '2018-10-10 07:15:28');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `posts`
--

CREATE TABLE `posts` (
  `id` int(10) UNSIGNED NOT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(255) CHARACTER SET utf8 NOT NULL,
  `category_id` int(11) NOT NULL,
  `body` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `sira` int(11) NOT NULL DEFAULT '0',
  `fixed` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_turkish_ci;

--
-- Tablo döküm verisi `posts`
--

INSERT INTO `posts` (`id`, `title`, `slug`, `category_id`, `body`, `created_at`, `updated_at`, `sira`, `fixed`) VALUES
(1, 'Selenium Nedir? ', 'selenium_nedir_', 1, '<p>Selenium tarayıcıları otomatikleştirmemizi sağlayan bir test aracıdır. Kısaca bu ara&ccedil;la yapılacak işlerin belli bir sınırı yoktur tamamen yazılımcıya kalmıştır. &Ouml;ncelikle, web uygulamalarını test ama&ccedil;lı olarak otomatik hale getirmek i&ccedil;in geliştirilmiştir, ama sadece bununla sınırlı değildir. Web tabanlı y&ouml;netim g&ouml;revlerini otomatikleştirebiliriz. Google Chrome, Firefox gibi &ouml;nde gelen tarayıcılar Selenium&#39;u kendi par&ccedil;aları haline getirmek i&ccedil;in gerekli eklentilere ve k&uuml;t&uuml;phanelere sahiptir. Ayrcıa sayısız tarayıcı otomasyon ara&ccedil;larının, API&#39;lerin ve Framework&#39;lerin temelini oluşturur.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<h2><strong>Selenium Eğitimleri</strong></h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/webdriver_nedir_\" target=\"_blank\">WebDriver Nedir?</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/selenium_webdriveri_eclipsee_nasil_yukleriz_\" target=\"_blank\">Selenium WebDriver&#39;ı Eclipse&#39;e Nasıl Y&uuml;kleriz?</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/selenium_html_etiketler\" target=\"_blank\">Selenium HTML Etiketler</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/selenium_cheat_sheets\" target=\"_blank\">Selenium Cheat Sheets</a></p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;</p>\r\n	</li>\r\n</ul>\r\n', '2017-01-08 16:06:09', '2018-10-12 11:05:50', 1, 1),
(2, 'WebDriver Nedir?', 'webdriver_nedir_', 1, '<p><span style=\"font-size:16px\">WebDriver web otomasyon framework&#39;&uuml;d&uuml;r. Bu framework sadece Firefox veya Google Chrome değilde farklı tarayıcılar kullanarak da testinizi &ccedil;alıştırır. Selenium IDE ile ayırılan en b&uuml;y&uuml;k &ouml;zellikten biridir.</span></p>\r\n\r\n<ul>\r\n	<li><span style=\"font-size:16px\"><strong>WebDriver </strong>ayrıca test scriptlerinde <strong>programlama dili</strong> kullanmayı sağlar. Selenium IDE de yoktur bu.</span></li>\r\n	<li><span style=\"font-size:16px\"><strong>if-then-else or switch-case</strong>&nbsp;gibi karşılaştırma işlemleri kullanabiliriz.</span></li>\r\n	<li><span style=\"font-size:16px\"><strong>do-while </strong>gibi d&ouml;ng&uuml;leri kullanabiliriz.​</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:16px\"><span style=\"font-size:16px\">WebDriver&#39;ın desteklediği programlama dilleri;</span></span></p>\r\n\r\n<ul>\r\n	<li><span style=\"font-size:16px\">Java</span></li>\r\n	<li><span style=\"font-size:16px\">.Net</span></li>\r\n	<li><span style=\"font-size:16px\">PHP</span></li>\r\n	<li><span style=\"font-size:16px\">Python</span></li>\r\n	<li><span style=\"font-size:16px\">Perl</span></li>\r\n	<li><span style=\"font-size:16px\">Ruby</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:16px\">Bu yazıda <strong>Java </strong>ve <strong>Eclipse </strong>kullanacağız.</span></p>\r\n\r\n<h2><strong><span style=\"font-size:16px\">Selenium RC and Webdriver farkı;&nbsp;</span></strong><span style=\"font-size:14px\">WebDriver 2006 hayatımıza girmeden &ouml;nce test aracı olarak <strong>Selenium Remote Control </strong>vardı. <strong>WebDriver </strong>ve <strong>Selenium RC</strong> ortak &ouml;zellikleri;</span></h2>\r\n\r\n<ul>\r\n	<li><span style=\"font-size:16px\">İkiside test yazmada programlama dili desteği var.</span></li>\r\n	<li><span style=\"font-size:16px\">İkiside farklı tarayıcılar &uuml;zerinden test koşmamızı sağlar.</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:16px\">Peki fark nerede?</span></p>\r\n\r\n<h2><span style=\"font-size:18px\">1. Mimari</span></h2>\r\n\r\n<p><span style=\"font-size:14px\"><strong>WebDriver&#39;ın mimarisi Selenium RC den daha basit;&nbsp;</strong>WebDriver tarayıcıyı işletim sesitemi seviyesinde kontrol ediyor.</span></p>\r\n\r\n<h5><span style=\"font-size:14px\"><strong>Selenium RC&#39;nin mimarisi daha karışık</strong></span></h5>\r\n\r\n<ul>\r\n	<li><span style=\"font-size:14px\">Teste başlamadan &ouml;nce ayrı bir program olan <strong>Selenium Remote Control (RC) Server</strong>&#39;ı&nbsp;başlatmamız gerekiyor.</span></li>\r\n	<li><span style=\"font-size:14px\">Selenium RC Server tarayıcı ile Selenium komutları arasındaki &quot;<strong>orta adam</strong>&quot; g&ouml;revi yapar.</span></li>\r\n	<li><span style=\"font-size:14px\">Teste başladığımızda, Selenium RC Server tarayıcıya <strong>Selenium Core</strong>&nbsp;denilen&nbsp;<strong>Javascript </strong>programını aktif eder.</span></li>\r\n	<li><span style=\"font-size:14px\">Aktif edildiğinde, Selenium Core test programından RC Server&#39;a aktarılan komutları alır ve başlatır.</span></li>\r\n	<li><span style=\"font-size:14px\">Komutlar alındığında,&nbsp;<strong>Selenium Core </strong>onları <strong>Javascript komutları </strong>olarak &ccedil;alıştırır.</span></li>\r\n	<li><span style=\"font-size:14px\">Tarayıcı Selenium Core&#39;ın talimatlarına uyar ve cevabını RC Server&#39;a aktarır.</span></li>\r\n	<li><span style=\"font-size:14px\">RC Server tarayıcının cevapları alır ve bize g&ouml;sterir.</span></li>\r\n	<li><span style=\"font-size:14px\">RC Server b&ouml;ylece bir sonraki komutu işler ve testi bitene kadar tekrar eder.</span></li>\r\n</ul>\r\n\r\n<h2><span style=\"font-size:18px\">2. Hız</span></h2>\r\n\r\n<p><span style=\"font-size:14px\"><strong>WebDriver Selenium RC&#39;den daha hızlıdır.</strong>&nbsp;Tarayıcı ile direk konuştuğu tarayıcının kendi &ccedil;ekirdeğini kullanır.</span></p>\r\n\r\n<p><span style=\"font-size:14px\"><strong>Selenium RC Selenium Core denilen Javascript programını kullandığı i&ccedil;in daha yavaştır.</strong>&nbsp;Selenium Core direk tarayıcı ile etkileşim i&ccedil;indedir yazılımcı değil.</span></p>\r\n\r\n<h2><span style=\"font-size:18px\">3. Ger&ccedil;ek Zamanlı Etkileşim</span></h2>\r\n\r\n<h5><span style=\"font-size:14px\"><strong>WebDriver sayafadaki yapılar ile daha ger&ccedil;ek&ccedil;i etkileşime ge&ccedil;er.</strong>&nbsp;&Ouml;rneğin, Bir web sayfasında disabled olarak tanımlanan textbox&#39;ı test ettiğimizi d&uuml;ş&uuml;nelim. WebDriver ger&ccedil;ekte bizimde yapamayacağımız gibi textbox&#39;a herhangi bişey yazamayacaktır.&nbsp;Selenium&nbsp;Core disabled olan yapıya erişebilecektir. Ge&ccedil;mişte, Selenium test uzmanları Selenium Core testlerinde disabled olan bir elemente değerler girildiğini şikayet ediyorlardı.</span></h5>\r\n\r\n<h2><span style=\"font-size:18px\">4. API</span></h2>\r\n\r\n<p><span style=\"font-size:14px\"><strong>Selenium RC API daha olgunlaştı, ancak fazlalıklar genellikle karışık komutlar i&ccedil;eriyordu.</strong>&nbsp;&Ouml;rneğin, &ccedil;oğu zaman, testerlar (type ile typeKeys - mouseDown ile mouseDownAt) arasında hangisini kullancakları konusunda ikiye d&uuml;ş&uuml;yorlardı. <strong>Daha k&ouml;t&uuml;s&uuml;,&nbsp;farklı tarayıcılar bu komutların her birini farklı şekillerde de yorumlar!</strong></span></p>\r\n\r\n<p><span style=\"font-size:14px\"><strong>WebDriver API ile işlem Selenium RC&#39;den daha basitleşti</strong>. Kafa karıştırıcı komutlar i&ccedil;ermiyor.</span></p>\r\n\r\n<h2><span style=\"font-size:18px\">5. Tarayıcı Desteği</span></h2>\r\n\r\n<p><strong><span style=\"font-size:14px\">WebDriver Headless HtmlUnit tarayıcısını destekleyebilir</span></strong></p>\r\n\r\n<p><span style=\"font-size:16px\">HtmlUnit&#39;e &quot;headless&quot; denilmesinin sebebi, gizli bir taraıcı olmasıdır. &Ccedil;ok hızlıdır &ccedil;&uuml;nk&uuml; sayfanın y&uuml;klenmesine zaman harcamaz. Bu, test y&uuml;r&uuml;tme d&ouml;ng&uuml;lerini hızlandırır. Kullanıcı i&ccedil;in g&ouml;r&uuml;nmez olduğu i&ccedil;in, yalnızca otomatik y&ouml;ntemlerle kontrol edilir</span><span style=\"font-size:16px\">.</span></p>\r\n\r\n<p><strong><span style=\"font-size:14px\">Selenium RC Headless HtmlUnit tarayıcısını desteklemez. </span></strong><span style=\"font-size:16px\">İşlemleri ger&ccedil;ekleştirebilmek i&ccedil;in ger&ccedil;ek, g&ouml;r&uuml;nebilen bir tarayıcıya ihtiya&ccedil; duyar.</span></p>\r\n\r\n<p><span style=\"font-size:16px\">Reference from <a href=\"http://guru99.com/selenium-tutorial.html\" style=\"font-size: 16px;\" target=\"_blank\">GURU99</a></span></p>\r\n', '2017-01-09 16:06:09', '2018-10-15 05:18:40', 29, 0),
(3, 'Selenium WebDriver\'ı Eclipse\'e Nasıl Yükleriz?', 'selenium_webdriveri_eclipsee_nasil_yukleriz_', 1, '<p><strong>Adım 1 - Java</strong></p>\r\n\r\n<p><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\">Bu</a> linkten <strong>Java Software Development Kit (JDK)</strong>&#39;ı indirip kuralım.</p>\r\n\r\n<p><strong>Adım 2 - Eclipse IDE</strong></p>\r\n\r\n<p><a href=\"http://www.eclipse.org/downloads/\" target=\"_blank\">Bu</a> linkten &quot;<strong>Eclipse IDE for Java Developers</strong>&quot;ı indirelim. Dikkat, 32 Bit ile 64 Bit arasından işletim sisteminize uygun olanı indirin. Exe dosyasını indirdikten sonra, &ccedil;alıştıralım ve&nbsp;<strong>Launch&nbsp;</strong>a tıklayalım.</p>\r\n\r\n<p><strong>Adım 3 - Selenium Java Client Driver</strong></p>\r\n\r\n<p><a href=\"http://seleniumhq.org/download/\" target=\"_blank\">Bu</a> linkten Java i&ccedil;in olan&nbsp;<strong>Selenium Java Client Driver</strong>&nbsp;&#39;ı indirebilirsiniz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/download_java_client_driver_1.png\" style=\"height:162px; width:489px\" /></p>\r\n\r\n<p>&quot;<strong>selenium-2.25.0.zip</strong>&quot; adında dosya indireceğiz. Basit&ccedil;e, dosyaları C diskine &ccedil;ıkarırsak direkt olarak Eclipse&#39;den import etmemiz &ccedil;ok kolaylaşacak. &quot;<strong>C:\\selenium-2.25.0\\</strong>&quot;.</p>\r\n\r\n<p><strong>Step 4 - Eclipse IDE ile WebDriver&#39;ı konfig&uuml;re etme</strong></p>\r\n\r\n<ol>\r\n	<li>&quot;<strong>eclipse.exe</strong>&quot; &ccedil;alıştırıyoruz.&nbsp;</li>\r\n	<li><strong>workspace</strong>&#39;i sorduğunda default olarak kabul ediyoruz.<br />\r\n	<img alt=\"\" src=\"/upload/images/configure_eclipse_1b.png\" style=\"height:183px; width:450px\" /></li>\r\n	<li>\r\n	<p><strong>File </strong>&gt; <strong>New </strong>&gt; <strong>Java Project.</strong>&nbsp;sırası ile &quot;<strong>newproject</strong>&quot; adında yeni bir Java projesi oluşturuyoruz</p>\r\n	</li>\r\n	<li>Oluşturulan projede sağ tuşa basarak <strong>New&nbsp;</strong>&gt;&nbsp;<strong>Package</strong>, sırası ile &quot;<strong>newpackage</strong>&quot; isminde yeni bir paket oluşturuyoruz.<br />\r\n	<img alt=\"\" src=\"/upload/images/021316_1152_SeleniumIns3.png\" style=\"height:180px; width:450px\" /></li>\r\n	<li>Oluşturulan pakete sağ tuş ile&nbsp;<strong>New </strong>&gt; <strong>Class</strong>, sırası ile &quot;<strong>MyClass</strong>&quot; isminde yeni bir <strong>&quot;</strong><strong>Class</strong><strong>&quot;&nbsp;</strong>oluşturuyoruz.<br />\r\n	<img alt=\"\" src=\"/upload/images/021316_1152_SeleniumIns5.png\" style=\"height:211px; width:450px\" /><br />\r\n	Şimdi Selenium WebDriver jar dosyalarını Java Built Path ile projemize ekliyoruz. Projeye sağ tuş ile&nbsp;<strong>Properties &gt; Java Built Path &gt; Libraries &gt; Add External JARs<br />\r\n	<img alt=\"\" src=\"/upload/images/021316_1152_SeleniumIns8.png\" style=\"height:187px; width:700px\" /></strong></li>\r\n	<li>Jar dosyalarını import ettikten sonra<strong>&nbsp;Apply and Close</strong>&nbsp;basarak işlemi tamamlıyoruz.<br />\r\n	<img alt=\"\" src=\"/upload/images/022017_1205_Guidetoinst_24_7_3.png\" style=\"height:349px; width:500px\" /></li>\r\n</ol>\r\n\r\n<p><strong>Faklı S&uuml;r&uuml;c&uuml;ler</strong></p>\r\n\r\n<p><strong>HTMLUnit ve Firefox WebDriver&#39;ı direk olarak herhangi bir eklentiye ihtiya&ccedil; duymadan test koşmamızı sağlayan tarayıcılardır.&nbsp;</strong>Diğer tarayıcılar i&ccedil;in <strong>Driver Server&nbsp;</strong>denilen ayrı bir programa ihtiya&ccedil; duyarlar. Driver server diğer tarayıcılardan farklıdır. &Ouml;rneğin, Internet Explorer&#39;ın kendine has driver&#39;ı vardır ve bu driver&#39;ı başla tarayıcılar i&ccedil;in kullanamayız.</p>\r\n\r\n<p>Driver&#39;ları <a href=\"http://seleniumhq.org/download/\" target=\"_blank\">bu linkte</a> bulabilirsiniz.</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Tarayıcı</strong></td>\r\n			<td><strong>Driver İsmi</strong></td>\r\n			<td><strong>Fark</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>HTMLUnit</td>\r\n			<td>HtmlUnitDriver</td>\r\n			<td>WebDriver can drive HTMLUnit using HtmlUnitDriver as driver server</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Firefox</td>\r\n			<td>Mozilla GeckoDriver</td>\r\n			<td>WebDriver can drive Firefox without the need of a driver server Starting Firefox 45 &amp; above one needs to use gecko driver created by Mozilla for automation</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Internet Explorer</td>\r\n			<td>Internet Explorer Driver Server</td>\r\n			<td>Available in 32 and 64-bit versions. Use the version that corresponds to the architecture of your IE</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Chrome</td>\r\n			<td>ChromeDriver</td>\r\n			<td>Though its name is just &quot;ChromeDriver&quot;, it is, in fact, a Driver Server, not just a driver. The current version can support versions higher than Chrome v.21</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Opera</td>\r\n			<td>OperaDriver</td>\r\n			<td>Though its name is just &quot;OperaDriver&quot;, it is, in fact, a Driver Server, not just a driver.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>PhantomJS</td>\r\n			<td>GhostDriver</td>\r\n			<td>PhantomJS is another headless browser just like HTMLUnit.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Safari</td>\r\n			<td>SafariDriver</td>\r\n			<td>Though its name is just &quot;SafariDriver&quot;, it is, in fact, a Driver Server, not just a driver.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>&Ouml;zet</strong></p>\r\n\r\n<ul>\r\n	<li><strong>Java Development Kit (JDK).</strong><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></li>\r\n	<li><strong>Eclipse IDE</strong>&nbsp;-&nbsp;<a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a></li>\r\n	<li><strong>Java Client Driver</strong>&nbsp;-&nbsp;<a href=\"http://seleniumhq.org/download/\">http://seleniumhq.org/download/</a></li>\r\n	<li>Eclipse&#39;de WebDriver projesi yazmaya başladığınızda Selenium&#39;un gerekli k&uuml;t&uuml;phanelerini import etmeyi unutmayın</li>\r\n	<li>HTMLUnit ve Firefox Driver Server kullanmadan tarayıcıları otomatikleştirmemizi sağlayan tarayıcılardır.</li>\r\n	<li>Her tarayıcının kendine &ouml;zg&uuml; Driver&#39;ı vardır.</li>\r\n</ul>\r\n\r\n<p>Oluşturduğumuz MyClass ismindeki java sınıfına aşağıdaki kodları ekleyerek ilk projemizi test edelim.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/first.png\" style=\"height:331px; width:784px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:16px\">Reference from&nbsp;</span><a href=\"http://guru99.com/selenium-tutorial.html\" style=\"font-size: 16px;\" target=\"_blank\">GURU99</a></p>\r\n', '2017-01-12 16:06:09', '2018-10-15 05:18:40', 28, 0),
(4, 'Cucumber Nedir?', 'cucumber_nedir_', 3, '<p>Cucumber, Behavior Driven Development (Davranış S&uuml;reci Geliştirme)&nbsp;yaklaşımını destekleyen testing yaklaşımıdır. Gherkin dilini kullanarak basit bir dil (T&uuml;rk&ccedil;e, İngilizce) kullanarak uygulamanın davranışını a&ccedil;ıklar.</p>\r\n\r\n<p><strong>Neden Cucumber ile Selenium Kullanırız?</strong></p>\r\n\r\n<p>Cucumber ve Selenium iki yeni teknolojidir. &Ccedil;oğu şirketler fonksiyonel testler i&ccedil;in Selenium kullanır. Bu şirketler Selenium&#39;u Cucumber ile entegre istemesinin nedeni, cucumber&nbsp;uygulamanın akışını okumayı ve anlamayı kolaylaştırdığı i&ccedil;indir.</p>\r\n\r\n<p>Cucumber, <u>Davranış S&uuml;reci Geliştirme</u>(<em>BDD</em>) tabanlı framework, aşağıdaki insanlar arasında k&ouml;pr&uuml; g&ouml;revi g&ouml;rmektedir.</p>\r\n\r\n<ol>\r\n	<li>Software Engineer and Business Analyst.</li>\r\n	<li>Manual Tester and Automation Tester.</li>\r\n	<li>Manual Tester and Developers.</li>\r\n</ol>\r\n\r\n<p>Ayrıca, Cucumber Gherkin dilini kullandığı i&ccedil;in&nbsp;geliştiricilere uygulamanın kodlarını anlamada faydası vardır.&nbsp;&Ccedil;alışanların hepsinin uygulamanı davranışını anlamasını sağlar.Gherkin dilinin s&ouml;z dizimi &ccedil;ok kolay anlaşılabilir ve okunabilirdir.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/092917_0716_UsingCucumb1.png\" style=\"height:104px; width:565px\" /></p>\r\n\r\n<p>Cucumber i&ccedil;in Jar Dosyaları:</p>\r\n\r\n<ul style=\"margin-left:1.5rem\">\r\n	<li>Cucumber-core</li>\r\n	<li>Cucumber-html</li>\r\n	<li>cobertura code coverage</li>\r\n	<li>Cucumber-java</li>\r\n	<li>Cucumber-junit</li>\r\n	<li>Cucumber-jvm-deps</li>\r\n	<li>Cucumber-reporting</li>\r\n	<li>Hemcrest-core</li>\r\n	<li>Gherkin</li>\r\n	<li>Junit</li>\r\n</ul>\r\n\r\n<p>Gerekli T&uuml;m Dosyalar;&nbsp;<a href=\"/upload/files/CucumberJarFiles.zip\">CucumberJarFiles.zip</a></p>\r\n\r\n<p>Dosyanın i&ccedil;erisindeki t&uuml;m jar dosyalarını Eclipse i&ccedil;inde ekliyoruz.&nbsp;<strong>Java Built Path -&gt; Add External JARs</strong>&nbsp; &nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/asdasd.png\" style=\"height:412px; width:600px\" /><br />\r\n<br />\r\nEkledikten sonra Cucumber ile Selenium&#39;u &ccedil;alıştırabilmek i&ccedil;in her işlemi ayırmamız gerekiyor.</p>\r\n\r\n<ul>\r\n	<li><strong>StepDefinition -&gt;&nbsp;Steps.java</strong>&nbsp;class&#39;ında test işlemimizi yapacak java kodları bulunacaktır.</li>\r\n	<li><strong>TestRunner -&gt; Runner.java</strong>&nbsp;class&#39;ında&nbsp;Selenium&#39;un Cucumber&#39;ı kullanarak referans kodları bulunacaktır.</li>\r\n	<li><strong>Features -&gt; MyTest.feature</strong>&nbsp;dosyasında Cucumber&#39;ın konuşma dili kullanarak ger&ccedil;ekletirdiğimiz adımlar&nbsp;bulunacaktır.</li>\r\n</ul>\r\n\r\n<p>Eclipse&#39;in Cucumber s&ouml;z dizimini (Gherkin) tanıması i&ccedil;in<strong>&nbsp;Help -&gt; Install New Software</strong>&nbsp;kısmından &quot;<strong>http://cucumber.github.io/cucumber-eclipse/update-site/</strong>&quot; adresini kullanarak eklentiyi ekliyoruz. &Ouml;rnek Proje;</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/1/092917_0716_UsingCucumb14.png\" style=\"height:509px; width:800px\" /></p>\r\n\r\n<p>MyTest.feature<br />\r\n<img alt=\"\" src=\"/upload/images/Untitled.png\" style=\"height:121px; width:355px\" /><br />\r\nRunner.java<br />\r\n<img alt=\"\" src=\"/upload/images/Untitled(1).png\" style=\"height:183px; width:489px\" title=\"\" /><br />\r\nSteps.java</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/Untitled(2).png\" style=\"height:440px; width:647px\" /><br />\r\n<br />\r\nSonu&ccedil;;<br />\r\n<img alt=\"\" src=\"/upload/images/Untitled(3).png\" style=\"height:288px; width:897px\" /><br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<h2><strong>Cucumber Eğitimleri</strong></h2>\r\n\r\n<ul>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/cucumber_options_nelerdir_\" target=\"_blank\">Cucumber Options Nelerdir?</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/cucumber_ile_degisken_gonderme\" target=\"_blank\">Cucumber ile Değişken G&ouml;nderme</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/cucumber_given,_when,_then,_and_but,_background\" target=\"_blank\">Cucumber Given, When, Then, And/But, Background</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/15_cucumber_sorulari___cevaplari\" target=\"_blank\">15 Cucumber Soruları &amp; Cevapları</a></p>\r\n	</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '2017-02-15 16:06:09', '2018-10-12 11:05:50', 0, 1),
(5, 'Cucumber Options Nelerdir?', 'cucumber_options_nelerdir_', 3, '<p><img alt=\"\" src=\"/upload/images/CucumberOptions_7.png\" style=\"height:246px; width:787px\" /><br />\r\n&nbsp;</p>\r\n\r\n<h3><em><strong>Dry Run</strong></em></h3>\r\n\r\n<p><em><strong>dryRun</strong></em>&nbsp;se&ccedil;eneği,&nbsp;<em><strong>true</strong>&nbsp;</em>veya&nbsp;<em><strong>false</strong></em>&nbsp;olabilir.&nbsp;<em>true</em>&nbsp;ise, Cucumber sadece Feature dosyasında belirtilen her Adımın, Adım Tanımlama dosyasına yazılmış kodun ilgili olup olmadığını kontrol edeceği anlamına gelir. B&ouml;ylece Feature dosyasındaki herhangi adım i&ccedil;in Step Definition kısmında eksik olup olmadığını belirtir ve bize mesaj g&ouml;sterir.&nbsp;<em><strong>Runner&nbsp;</strong></em>sınıfına&nbsp;<em><strong>dryRun = true&nbsp;</strong>kodunu eklememiz yeterli olacaktır.<br />\r\nMyTest.feature&nbsp;</em>dosyasında tanımlı ama Steps.java dosyasında tanımlı olmayan bir ifade g&ouml;r&uuml;ld&uuml;ğ&uuml;nde sonucu bize bildirir.<br />\r\n<img alt=\"\" src=\"/upload/images/CucumberOptions_7(1).png\" style=\"height:535px; width:800px\" /></p>\r\n\r\n<h3><em><strong>Monochrome</strong></em></h3>\r\n\r\n<p><strong>Monochrome&nbsp;</strong>se&ccedil;eneği&nbsp;<em><strong>true</strong>&nbsp;</em>veya&nbsp;<em><strong>false</strong></em>&nbsp;olabilir.&nbsp;<em>true</em>&nbsp;ise demektir ki Cucumber test sonucunu daha okunaklı bir &ccedil;ıktı olarak&nbsp;<em>console&nbsp;</em>ekranında g&ouml;sterir.&nbsp;<em>false&nbsp;</em>ise&nbsp;<em>console&nbsp;</em>&ccedil;ıktısı olması gerektiği gibi değildir yani herhangi bir yorumlama yapmadan sonucu ekrana bastırır.&nbsp;<em><strong>Runner&nbsp;</strong></em>sınıfına&nbsp;<em><strong>monochrome</strong><strong>&nbsp;= true&nbsp;</strong>kodunu eklememiz yeterli olacaktır.<br />\r\n<img alt=\"\" src=\"/upload/images/Untitled(4).png\" style=\"height:189px; width:649px\" /></em><br />\r\n&nbsp;</p>\r\n\r\n<h3><em><strong>Features</strong></em></h3>\r\n\r\n<p><em><strong>Features&nbsp;</strong></em>&ouml;zelliği projede&nbsp;<em>Cucumber&#39;ın</em>&nbsp;hangi kısımda olacağını belirtir. Bizim yapacağımız tek şey yolu belirtmek olacaktır gerisini&nbsp;<em>Cucumber</em>&nbsp;otomatik olarak &lsquo;<em><strong>.features</strong></em>&lsquo; uzantılı dosyayı bulacaktır.&nbsp;<em><strong>Runner&nbsp;</strong></em>sınıfına&nbsp;<em><strong>features&nbsp;= &quot;dosyanın_yolu&quot;&nbsp;</strong>kodunu eklememiz yeterli olacaktır.</em><br />\r\n&nbsp;</p>\r\n\r\n<h3><em><strong>Glue</strong></em></h3>\r\n\r\n<p><em>Features</em>&nbsp;&ouml;zelliği gibi d&uuml;ş&uuml;n&uuml;lebilir. Tek fark Cucumber&#39;da yazdığımız adımların java karşılığı olacak olan kodların yollarını belirtmemize yardımcı olur<em><strong>.</strong></em>&nbsp;<em><strong>Runner&nbsp;</strong></em>sınıfına&nbsp;<em><strong>glue&nbsp;= &quot;stepDefinition_yolu&quot;&nbsp;</strong>kodunu eklememiz yeterli olacaktır.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><em><strong>Format / Plugin</strong></em></h3>\r\n\r\n<p><strong><em>Format / Plugin&nbsp;</em></strong>&ccedil;ıktıyı &ouml;zelleştirebildiğimiz kısımdır. Farklı formatlarda &ccedil;ıktı almamızı sağlar.&nbsp;</p>\r\n\r\n<p><strong><em>plugin</em></strong><em><strong>= {&ldquo;<span style=\"color:rgb(0, 0, 255)\">pretty</span>&ldquo;}</strong></em></p>\r\n\r\n<p><strong><em>plugin</em></strong><em><strong>= {&ldquo;<span style=\"color:rgb(0, 0, 255)\">pretty</span>&ldquo;,&quot;html:Klas&ouml;r_İsmi&quot;}</strong></em></p>\r\n\r\n<p><strong><em>plugin</em></strong><em><strong>= {&ldquo;<span style=\"color:rgb(0, 0, 255)\">pretty</span>&ldquo;,&quot;json:Folder_Name/cucumber.json&quot;}</strong></em></p>\r\n\r\n<p><strong><em>plugin</em></strong><em><strong>= {&ldquo;<span style=\"color:rgb(0, 0, 255)\">pretty</span>&ldquo;,&quot;</strong></em><strong><em>junit:Folder_Name/cucumber.xml</em></strong><em><strong>&quot;}</strong></em></p>\r\n', '2017-02-28 16:06:09', '2018-10-15 05:18:40', 27, 0),
(6, 'Cucumber ile Değişken Gönderme', 'cucumber_ile_degisken_gonderme', 3, '<p><em>Cucumber </em>senaryolarında değişken tanımlayabilir ve bu değişkenleri java tarafında kullanabiliriz. <em><strong>MyTest.feature</strong></em> dosyasında <strong>Given</strong>, <strong>When</strong>, <strong>And </strong>tanımlamalarından sonra kullanmak istediğimiz değişkenler neler ise &ccedil;ift tırnak (&quot; &quot;) i&ccedil;inde belirtiyoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/Untitled(5).png\" style=\"height:123px; width:373px\" /><br />\r\nJava tarafındaki <strong><em>Steps.java </em></strong>dosyamızda ise <em>Cucumber </em>tarafında aralarında kelime olmayan tırnak i&ccedil;inde yazılmış ifadeleri ayrı ayrı ka&ccedil; tane yazılmış ise alabiliriz. Almamız i&ccedil;in <strong>Regular Expression</strong> tanımlayarak yazılan kelime veya c&uuml;mlecikleri okuyabiliriz.</p>\r\n\r\n<p><br />\r\n<img alt=\"\" src=\"/upload/images/Untitled(6).png\" style=\"height:78px; width:434px\" /></p>\r\n\r\n<p>Dikkat edilmesi gereken her değişken i&ccedil;in<strong>&nbsp;<span style=\"color:#FF0000\">\\&quot;(.*)\\&quot; </span></strong>ifadesini kullanmak zorundayız. Diğer bir nokta ise tanımlanan fonksiyonda da aynı işlemi yapmamız gerekiyor. Artık değişkenlere ulaşabiliriz. &Ccedil;ıktı.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/Untitled(7).png\" style=\"height:266px; width:881px\" /></p>\r\n', '2017-03-02 16:06:09', '2018-10-15 05:18:40', 26, 0),
(7, 'Selenium HTML Etiketler', 'selenium_html_etiketler', 1, '<p>HTML formlar website ziyaret&ccedil;ilerinden bilgi almak i&ccedil;in kullanılan temel elemanlardır.&nbsp;</p>\r\n\r\n<h2><strong>WebElement, findElement(), findElements() Nedir?</strong></h2>\r\n\r\n<p><strong>Selenium</strong>, her form &ouml;ğesini WebElement&#39;in bir nesnesi olarak yorumlamaktadır.<strong> </strong>WebDriver&#39;ın elementleri anlaması i&ccedil;in birka&ccedil; teknik vardır. Bunlar elementlere &ouml;zg&uuml; işlevler olan ID, Name, Class, XPath, Tagname, CSS Selectors, link, gibi yapılardır.</p>\r\n\r\n<ul style=\"margin-left:1.5rem\">\r\n	<li><strong>findElement()</strong>&nbsp;&ndash; Sadece hiyerarşideki ilk elementi bulur ve WebElement objesi olarak geriye d&ouml;nd&uuml;r&uuml;r.</li>\r\n	<li><strong>findElements()</strong>&nbsp;&ndash; Gerekli kriteri sağlayan t&uuml;m elementleri WebElement objesi olarak geriye d&ouml;nd&uuml;r&uuml;r.</li>\r\n</ul>\r\n\r\n<p><strong>Adım 1:&nbsp;</strong>Web Element nesneleri yaratmak ve erişmek i&ccedil;in gerekli k&uuml;t&uuml;phaneleri import etmemiz gerekli.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/072717_0632_SeleniumWeb1.png\" style=\"height:38px; width:286px\" /></p>\r\n\r\n<p><strong>Adım 2:&nbsp;</strong>findElement() method&#39;unu &ccedil;ağırarak WebDriver&#39;dan d&ouml;nen elementi kullanabiliriz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/072717_0632_SeleniumWeb1(1).png\" style=\"height:54px; width:475px\" /></p>\r\n\r\n<p>Burdaki &ouml;rnekte olduğu gibi By.name() kullanarak yaptığımız gibi daha bir&ccedil;ok alternatif kullanabiliriz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/072717_0632_SeleniumWeb1(2).png\" style=\"height:370px; width:388px\" /></p>\r\n\r\n<p>WebElement&#39;i oluşturduktan sonra kullanabileceğimiz t&uuml;m işlevler;<br />\r\n<img alt=\"\" src=\"/upload/images/072717_0632_SeleniumWeb1(3).png\" style=\"height:536px; width:644px\" /></p>\r\n\r\n<table class=\"table-striped table1\" style=\"border-collapse:collapse; border-spacing:0px; border:0px; box-sizing:inherit; color:rgb(52, 52, 52); font-family:arial,sans-serif; font-size:16.8px; max-width:100%; width:741px\">\r\n	<tbody>\r\n		<tr>\r\n		</tr>\r\n	</tbody>\r\n	<thead>\r\n		<tr>\r\n			<th style=\"text-align:left; vertical-align:middle\"><strong>Element</strong></th>\r\n			<th style=\"text-align:left; vertical-align:middle\"><strong>Komut</strong></th>\r\n			<th style=\"text-align:left; vertical-align:middle\"><strong>Tanım</strong></th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td rowspan=\"2\" style=\"vertical-align:middle\"><strong>Input Box</strong></td>\r\n			<td style=\"vertical-align:middle\">sendKeys()</td>\r\n			<td style=\"vertical-align:middle\">Textbox&#39;a değer girmek i&ccedil;in</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:middle\">clear()</td>\r\n			<td style=\"vertical-align:middle\"><span style=\"color:rgb(52, 52, 52); font-family:arial,sans-serif; font-size:16.8px\">Textbox&#39;dan değer silmek i&ccedil;in</span></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:middle\"><strong>Check Box,</strong><strong>Radio Button,</strong></td>\r\n			<td style=\"vertical-align:middle\">click()</td>\r\n			<td style=\"vertical-align:middle\">Element&#39;e tıklamak i&ccedil;in</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:middle\"><strong>Links</strong></td>\r\n			<td style=\"vertical-align:middle\">click()</td>\r\n			<td style=\"vertical-align:middle\">Link&#39;e tıklamak ve sonraki komutun işlenmesinden &ouml;nce sayfanın y&uuml;klenmesini beklemek i&ccedil;in</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:middle\"><strong>Submit Button</strong></td>\r\n			<td style=\"vertical-align:middle\">submit()<br />\r\n			&nbsp;</td>\r\n			<td style=\"vertical-align:middle\">Submit işlemini ger&ccedil;ekleştirmek i&ccedil;in kullanılır.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', '2017-03-19 16:06:09', '2018-10-15 05:18:40', 25, 0),
(8, 'Appium Kurulumu', 'appium_kurulumu', 4, '<p><strong>Windows&#39;a Android i&ccedil;in Appium Kurulumu</strong></p>\r\n\r\n<ol>\r\n	<li>Java&nbsp;</li>\r\n	<li>Android SDK&nbsp;</li>\r\n	<li>IDE&nbsp;</li>\r\n	<li>Node Js&nbsp;</li>\r\n	<li>Appium Server&nbsp;</li>\r\n	<li>Inspect Configuration</li>\r\n</ol>\r\n\r\n<p><strong>1 &ndash;&nbsp;JAVA&nbsp;</strong></p>\r\n\r\n<ul>\r\n	<li style=\"text-align:left\"><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">Download </a>Java JDK</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/download.png\" style=\"height:284px; width:450px\" /></p>\r\n\r\n<ul>\r\n	<li>Bilgisayarım &ndash;&gt; &Ouml;zellikler &ndash;&gt; Gelişmiş Sistem Ayarları &ndash;&gt;&nbsp;Ortam Değişkenleri &ndash;&gt; JAVA_HOME oluştur&ndash;&gt;&nbsp;C:\\Program Files\\Java\\jdk1.8.0_131</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/download(1).png\" style=\"height:314px; width:280px\" /><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31.png\" style=\"height:138px; width:500px\" /></p>\r\n\r\n<h3><strong>2 &ndash; Android SDK</strong></h3>\r\n\r\n<ul>\r\n	<li>Android SDK <a href=\"https://developer.android.com/studio/\">Download </a>and Run:&nbsp;</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(1).png\" style=\"height:325px; width:600px\" /></p>\r\n\r\n<ul>\r\n	<li>Bilgisayarım &ndash;&gt; &Ouml;zellikler &ndash;&gt; Gelişmiş Sistem Ayarları &ndash;&gt;&nbsp;Ortam Değişkenleri &ndash;&gt; ANDROID_HOME oluştur</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(2).png\" style=\"height:135px; width:500px\" /></p>\r\n\r\n<ul>\r\n	<li>Değişkenleri yola ekle</li>\r\n	<li>%JAVA_HOME%; %ANDROID_HOME%\\platform-tools; %ANDROID_HOME%\\tools; %ANDROID_HOME%\\build-tools</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(3).png\" style=\"height:285px; width:300px\" /><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(4).png\" style=\"height:286px; width:300px\" /></p>\r\n\r\n<h3><strong>3 &ndash;&nbsp;&nbsp;IDE</strong></h3>\r\n\r\n<p><a href=\"https://www.jetbrains.com/idea/download/#section=windows\">Jetbrains </a>veya <a href=\"http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/oxygen2\">Eclipse </a>IDE&#39;lerini kullanabiliriz</p>\r\n\r\n<h3><strong>4 &ndash;&nbsp;&nbsp;Node Js</strong></h3>\r\n\r\n<p><a href=\"https://nodejs.org/en/\">Indirip</a>&nbsp;&ccedil;alıştıralım</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(5).png\" style=\"height:244px; width:500px\" /></p>\r\n\r\n<p>Konsol ekranına <strong>node -v</strong> yazarak y&uuml;kl&uuml; Node.js versiyonunu &ouml;ğrenebiliriz.</p>\r\n\r\n<h3><strong>5 &ndash;&nbsp;&nbsp;Appium Server Installation</strong></h3>\r\n\r\n<p><a href=\"http://appium.io/\">Indirip</a>&nbsp;&ccedil;alıştıralım</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(6).png\" style=\"height:267px; width:500px\" /><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(7).png\" style=\"height:373px; width:400px\" /></p>\r\n\r\n<h3><strong>6 &ndash; Inspect Configuration</strong></h3>\r\n\r\n<p>Uygulamayı denetlemek isterseniz, Appium Server i&ccedil;ersindeki Desired Capabilities alanlarını uygun dolduralım.</p>\r\n\r\n<p><span style=\"color:rgb(17, 17, 17)\"><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(8).png\" style=\"height:394px; width:400px\" /></span><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(9).png\" style=\"height:321px; width:400px\" /><br />\r\nDesired Capabilities alanları;</p>\r\n\r\n<p><em><strong>uuid </strong>&ndash;&gt;&nbsp;Devices specific ID (You can find UUID&nbsp; by typing &ldquo;adb devices&rdquo; on CMD)</em></p>\r\n\r\n<p><em><strong>platformName&nbsp;</strong>&ndash;&gt;&nbsp;&nbsp;Devices OS platform like Android, iOS.</em></p>\r\n\r\n<p><em><strong>platformVersion&nbsp;</strong>&ndash;&gt;&nbsp;&nbsp;Devices OS version like 7.0 , 6.0.1</em></p>\r\n\r\n<p><em><strong>app </strong>&ndash;&gt;&nbsp;&nbsp;Apk&rsquo;s location on your computer</em></p>\r\n\r\n<p><em><strong>deviceName&nbsp;</strong>&ndash;&gt; The kind of device name to use.&nbsp;</em></p>\r\n\r\n<p><a href=\"https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/caps.md\">Link</a>&#39;ten daha fazla bulabilirsiniz</p>\r\n\r\n<p><em><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(10).png\" style=\"height:403px; width:500px\" /></em></p>\r\n\r\n<p><em><em><img alt=\"\" src=\"/upload/images/image2017-12-26_14-56-31(11).png\" style=\"height:272px; width:500px\" /></em></em></p>\r\n', '2017-03-31 16:06:09', '2018-10-15 05:18:40', 24, 0),
(9, 'Cucumber Given, When, Then, And/But, Background', 'cucumber_given,_when,_then,_and_but,_background', 3, '<h3 style=\"text-align:justify\"><strong>Given</strong></h3>\r\n\r\n<p style=\"text-align:justify\"><code>Given</code>&nbsp;adımları, sistemin ilk i&ccedil;eriğini tanımlamak i&ccedil;in kullanılır. &quot;Senaryo &Ouml;zeti&quot;. Genel olarak ge&ccedil;mişteki bişeydir. Cucumber <code>Given</code>&nbsp;adımını &ccedil;alıştırdığında, Sistemi iyi tanımlanmış duruma g&ouml;re,Nesneyi yaratmak/konfig&uuml;re etmek veya test veritabanına veri eklemek i&ccedil;in, ayarlar.&nbsp;<code>Given</code>&nbsp;adımının amacı kullanıcı veya harici sistemin sistem ile iletişime ge&ccedil;meden &ouml;nce bilinen durumu sisteme eklemeyi sağlar. <code>Given</code>&nbsp;kullanıcı etkileşimi hakkında konuşmaktan ka&ccedil;ınır. Kullanım durumları oluşturuyorsanız, <code>Given</code>&nbsp;lar&nbsp;&ouml;n koşullarınızdır. Birden fazla&nbsp;<span style=\"font-family:monospace\">Given</span>&nbsp;olabilir.</p>\r\n\r\n<p style=\"text-align:justify\">&Ouml;rnek:</p>\r\n\r\n<ul>\r\n	<li style=\"text-align:justify\">Mickey ve Minnie oyuna başlar</li>\r\n	<li style=\"text-align:justify\">Giriş yapılır</li>\r\n	<li style=\"text-align:justify\">Joe&#39;nin 20 lirası var</li>\r\n</ul>\r\n\r\n<h3 style=\"text-align:justify\"><strong>When</strong></h3>\r\n\r\n<p style=\"text-align:justify\"><code>When</code>&nbsp;adımları olayları veya aksiyonları tanımlar. Bu adımlar insanlar ile sistemlerin etkileşiminde&nbsp;veya diğer sistemlerin olayları tetiklemesi i&ccedil;in kullanılır. Her senaryoda sadece 1 adet olması &ouml;nemlidir. Birden fazla olması gerekli ise varsayılan senaryolar ayrılmalıdır.&nbsp;</p>\r\n\r\n<p style=\"text-align:justify\">&Ouml;rnek:</p>\r\n\r\n<ul>\r\n	<li style=\"text-align:justify\">Kelime tahmin et</li>\r\n	<li style=\"text-align:justify\">Arkadaş davet et</li>\r\n	<li style=\"text-align:justify\">Parayı geri &ccedil;ek</li>\r\n</ul>\r\n\r\n<p style=\"text-align:justify\"><strong>Then</strong></p>\r\n\r\n<p style=\"text-align:justify\"><code>Then</code>&nbsp;adımları beklenen sonu&ccedil;ları tanımlamak i&ccedil;in kullanılır. Sistem ger&ccedil;ekte ne yaptığını beklenen sonu&ccedil; ile karşılaştırmak i&ccedil;indir. G&ouml;zlem, g&ouml;zlemlenebilir bir &ccedil;ıktıda olmalıdır. Yani, sistemden &ccedil;ıkan (rapor, kullanıcı aray&uuml;z&uuml;, mesaj) ve i&ccedil;inde derin bir şekilde g&ouml;m&uuml;l&uuml; olmayan bir şey olmalıdır. (veritabanı gibi).</p>\r\n\r\n<p style=\"text-align:justify\">&Ouml;rnek:</p>\r\n\r\n<ul>\r\n	<li style=\"text-align:justify\">Tahmin edilen kelimenin yanlış olduğunu g&ouml;r</li>\r\n	<li style=\"text-align:justify\">İstek al</li>\r\n	<li style=\"text-align:justify\">Kart yutulmalı</li>\r\n</ul>\r\n\r\n<p style=\"text-align:justify\">Yalnızca kullanıcı (veya harici sistem) i&ccedil;in g&ouml;zlemlenebilir olan sonucu doğrulamanız gerekir ve genellikle veritabanları bulunmaz.</p>\r\n\r\n<h3 style=\"text-align:justify\"><strong>And, But</strong></h3>\r\n\r\n<p style=\"text-align:justify\">Birden fazla&nbsp;<code>Given</code>&nbsp;,&nbsp;<code>Then&nbsp;</code><code>veya</code>&nbsp;<code>When</code>&nbsp;<span style=\"font-family:monospace\">&nbsp;</span>varsa;</p>\r\n\r\n<div class=\"highlight\" style=\"box-sizing: inherit; max-width: 100%; overflow: hidden; padding: 0px; margin-bottom: 1.5rem; color: rgb(74, 74, 74);\">\r\n<pre style=\"text-align:justify\">\r\n<code>Example: &Ccedil;oklu Given\r\n  Given birşey\r\n  And başka birşey\r\n  And başka birşey daha\r\n  When g&ouml;zlerimi a&ccedil;arım\r\n  Then birşey g&ouml;r&uuml;yorum\r\n  But başka birşey g&ouml;rmemeliyim.</code></pre>\r\n</div>\r\n\r\n<h3 style=\"text-align:justify\"><strong>Background</strong></h3>\r\n\r\n<p style=\"text-align:justify\">Bazen, bir &ouml;zellikteki t&uuml;m senaryolarda aynı Verilen adımları tekrarladığınızı g&ouml;r&uuml;r&uuml;z. Her senaryoda tekrar ettiği i&ccedil;in, bu adımları senaryolarda tanımlamak gerekli değildir. <span style=\"font-family:monospace\">Given&nbsp;</span>adımlarını background&#39;a taşıyarak background altında gruplayabiliriz.&nbsp;<code>Background</code>&nbsp;feature dosyasına bazı i&ccedil;erikler eklemeye izin verir. Bir veya birden fazla <span style=\"font-family:monospace\">Given&nbsp;</span>adımları olabilir. <code>Background</code>&nbsp;her senaryodan &ouml;nce &ccedil;alışır. Sadece&nbsp; her feature da 1 adet <code>Background&nbsp;</code>adımları vardır. Farklı senaryolarda farklı <code>Background a&nbsp;</code>ihtiya&ccedil; varsa, onları farklı feature dosyalarına ayırmak gerekir.</p>\r\n\r\n<div class=\"highlight\" style=\"font-family: sans-serif, arial, verdana, \">\r\n<h3 style=\"text-align:justify\"><strong>Background i&ccedil;in ipucuları</strong></h3>\r\n\r\n<ul>\r\n	<li style=\"text-align:justify\"><code>Background</code><span style=\"color:rgb(82, 82, 82); font-family:open sans,sans-serif; font-size:14px\">&nbsp;</span>adımlarında karmalık durumlar kullanmayın ama durum ger&ccedil;ekte bilinmesi gereken birşey değil ise\r\n\r\n	<ul>\r\n		<li>&Ouml;rnek, Kullanıcı ve site isimleri m&uuml;şteriyi ilgilendirmiyorsa,&nbsp;<code>Given site sahibi olarak giriş yaptım </code>olarak yazılabilir.</li>\r\n	</ul>\r\n	</li>\r\n	<li style=\"text-align:justify\"><code>Background</code><span style=\"color:rgb(82, 82, 82); font-family:open sans,sans-serif; font-size:14px\">&nbsp;</span>kısmı kısa tutulmalıdır ve &ccedil;ok olmamalıdır.</li>\r\n	<li style=\"text-align:justify\"><code>Background</code><span style=\"color:rgb(82, 82, 82); font-family:open sans,sans-serif; font-size:14px\">&nbsp;</span>kısmını canlı yap.\r\n	<ul>\r\n		<li>Renkli isimler kullanın ve hikayeyi anlatın. İnsan beyni hikayeleri <code>&quot;User A&quot;</code>,&nbsp;<code>&quot;User B&quot;</code>,&nbsp;<code>&quot;Site 1&quot;&nbsp;</code>bu şekilde isimlendirmeden daha sağlıklı aklında tutacaktır.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<table class=\"is-size-6 table\" style=\"border-collapse:collapse; border-spacing:0px; box-sizing:inherit; color:rgb(54, 54, 54); font-family:blinkmacsystemfont,-apple-system,segoe ui,roboto,oxygen,ubuntu,cantarell,fira sans,droid sans,helvetica neue,helvetica,arial,sans-serif; font-size:16px; width:945.25px\">\r\n	<thead>\r\n		<tr>\r\n			<th style=\"border-color:rgb(219, 219, 219); text-align:left; vertical-align:top\">English Keyword</th>\r\n			<th style=\"border-color:rgb(219, 219, 219); text-align:left; vertical-align:top\">Turkish equivalent(s)</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>feature</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>&Ouml;zellik</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>background</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Ge&ccedil;miş</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>scenario</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Senaryo</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>scenarioOutline</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Senaryo taslağı</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>examples</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>&Ouml;rnekler</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>given</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Diyelim ki&nbsp;</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>when</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Eğer ki&nbsp;</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>then</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>O zaman&nbsp;</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>and</code></td>\r\n			<td style=\"border-color:rgb(219, 219, 219); vertical-align:top\"><code>Ve&nbsp;</code></td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"vertical-align:top\"><code>but</code></td>\r\n			<td style=\"vertical-align:top\"><code>Fakat,</code><code>Ama&nbsp;</code></td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n</div>\r\n', '2017-04-10 16:06:09', '2018-10-15 05:18:40', 23, 0),
(10, 'Appium Kütüphaneleri', 'appium_kutuphaneleri', 4, '<h2>Selenium i&ccedil;in java k&uuml;t&uuml;phaneleri</h2>\r\n\r\n<p><strong>1:</strong>&nbsp;<a href=\"http://www.seleniumhq.org/download/\">Bu link</a>ten Selenium&#39;un sayfasına girerek&nbsp;<strong>&ldquo;Selenium Client &amp; WebDriver Language Bindings&rdquo;&nbsp;</strong>alanından&nbsp; Hangi dil i&ccedil;in yazılacaksa ona ait k&uuml;t&uuml;phaneyi indirelim ve zip dosyasından &ccedil;ıkaralım.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/selenium-java-latest.png\" style=\"height:324px; width:600px\" /></p>\r\n\r\n<p><strong>2:</strong>&nbsp;İndirilen zip dosyasının i&ccedil;ersinde aşağıdaki resimdeki gibi dosyalar olmalıdır ancak <strong>JAR&nbsp;</strong>isimelri indirdiğiniz versiyonlara bağlı olarak değişebilir. Genel olarak i&ccedil;erisinde <strong>lib</strong>&nbsp; isiminde bir klas&ouml;r ve 2 adet <strong>JAR </strong>dosyası olmalıdır.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/selenium-java-latest(1).png\" style=\"height:161px; width:600px\" /></p>\r\n\r\n<h2>Appium i&ccedil;in java k&uuml;t&uuml;phaneleri</h2>\r\n\r\n<p><strong>1:</strong>&nbsp;<a href=\"http://appium.io/\">Bu link</a>ten Appium&nbsp;&#39;un sayfasına girerek Download kısmında <strong>h</strong>angi dil i&ccedil;in yazılacaksa ona ait k&uuml;t&uuml;phaneyi indirelim ve zip dosyasından &ccedil;ıkaralım.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/selenium-java-latest(2).png\" style=\"height:346px; width:400px\" /></p>\r\n\r\n<p><strong>2:</strong>&nbsp;<a href=\"https://search.maven.org/\">Bu link</a>&#39;ten&nbsp;The Maven Central Repository sayfasına girerek ve arama kısmına&nbsp;<strong>&quot;g:io.appium a:java-client</strong><strong>&quot;</strong>&nbsp;yazarak appium i&ccedil;in <em>java client</em> k&uuml;t&uuml;phanemizi <strong>jar </strong>dosyası oalrak indirelim.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/selenium-java-latest(3).png\" style=\"height:232px; width:800px\" /></p>\r\n\r\n<h2><strong style=\"font-size:13px\">3:</strong><span style=\"font-size:13px\">&nbsp;</span><a href=\"https://mvnrepository.com/artifact/junit/junit/4.12\" style=\"font-size: 13px;\">Bu link</a><span style=\"font-size:13px\">&#39;ten JUnit maven k&uuml;t&uuml;phanemizi jar dosyası olarak indirelim.</span></h2>\r\n\r\n<p><strong>4:</strong>&nbsp;Son olarak <a href=\"https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core/1.3\"><strong>hamcrest-core</strong></a>&nbsp;ve&nbsp;<a href=\"https://mvnrepository.com/artifact/org.apache.commons/commons-lang3/3.7\"><strong>commons-lang</strong></a>&nbsp;isimerindeki 2 adet k&uuml;t&uuml;phaneyi daha jar dosyası olarak indirmemiz gerekiyor.</p>\r\n', '2017-04-29 16:06:09', '2018-10-15 05:18:40', 22, 0),
(11, 'Eclipse\'te Appium için proje oluşturma', 'eclipsete_appium_icin_proje_olusturma', 4, '<h2>Eclipse&#39;te yeni bir Java projesi a&ccedil;alım</h2>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/11/selenium-java-latest.png\" style=\"height:425px; width:500px\" /><img alt=\"\" src=\"/upload/images/11/selenium-java-latest(1).png\" style=\"height:384px; width:400px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/11/selenium-java-latest(2).png\" style=\"height:493px; width:400px\" /><img alt=\"\" src=\"/upload/images/11/selenium-java-latest(3).png\" style=\"height:368px; width:550px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/11/selenium-java-latest(4).png\" style=\"height:200px; width:450px\" /><img alt=\"\" src=\"/upload/images/11/selenium-java-latest(5).png\" style=\"height:332px; width:500px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Referans:&nbsp;<a href=\"http://www.automationtestinghub.com/appium-project-in-eclipse/\">http://www.automationtestinghub.com/</a></p>\r\n\r\n<p>&nbsp;</p>\r\n', '2017-07-19 16:06:09', '2018-10-15 05:18:40', 21, 0);
INSERT INTO `posts` (`id`, `title`, `slug`, `category_id`, `body`, `created_at`, `updated_at`, `sira`, `fixed`) VALUES
(12, 'Mobile Uygulamanın appPackage ve appActivity bilgilerini öğrenme', 'mobile_uygulamanin_apppackage_ve_appactivity_bilgilerini_ogrenme', 4, '<p><strong>appPackage ve appActivity isimleri nelerdir?</strong></p>\r\n\r\n<p><strong>appPackage</strong>: Kısaca, uygulamayı yazanların teknik ismi olarak &ouml;zetlenebilir.<strong>&nbsp;&Ouml;rnek;</strong>&nbsp;Youtube Android i&ccedil;in appPackage ismi &lsquo;<em>com.google.android.youtube</em>&rsquo;. Facebook i&ccedil;in&nbsp; &lsquo;<em>com.facebook.katana</em>&rsquo;, WhatsApp i&ccedil;in &lsquo;<em>com.whatsapp</em>&rsquo;. Yani, Appium ile Facebook test edilmek istenirse &lsquo;<em>com.facebook.katana</em>&rsquo; ismi kullanılmalıdır.</p>\r\n\r\n<p><strong>appActivity</strong>: Kısaca, uygulama tarafından sağlanan farklı işlevleri ifade eder. &Ouml;rnek; Whatsapp,&nbsp;konuşmalar, profil bilgileri, profil fotoğrafı ayarlama, durum ayarı, bildirimler&nbsp;gibi birden fazla destekler. T&uuml;m bu fonksiyonlar farklı&nbsp;appActivity tarafından sunulur.</p>\r\n\r\n<h2>SmartOffice uygulaması i&ccedil;in&nbsp;appPackage ve&nbsp;appActivity isimlerini &ouml;ğrenme</h2>\r\n\r\n<p>Telefonumuzu USB kablosu ile bilgisayara bağladıktan sonra, Konsol ekranına (<strong>Ctrl+r</strong> -&gt; <strong>cmd</strong>) ile <strong>&quot;adb devices&quot;&nbsp;</strong>yazarak bağlı olduğunu g&ouml;r&uuml;yoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/12/selenium-java-latest.png\" style=\"height:213px; width:500px\" /></p>\r\n\r\n<p>Daha sonra aynı konsol ekranına &quot;<strong>abd shell</strong>&quot; yazarak telefona em&uuml;lat&ouml;r olarak bağlanıyoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/12/selenium-java-latest(1).png\" style=\"height:215px; width:500px\" /></p>\r\n\r\n<p>Daha sonra android telefonumuzda&nbsp;<em>appPackage </em>ve&nbsp;<em>appActivity </em>isimlerini &ouml;ğrenmek istediğimiz uygulamayı a&ccedil;ıyoruz ve a&ccedil;ıldıktan sonra konsol ekranına &quot;<strong>dumpsys window windows | grep -E &#39;mCurrentFocus&#39;&quot;</strong> şu komutu yazıyoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/12/selenium-java-latest(2).png\" style=\"height:86px; width:790px\" /></p>\r\n\r\n<p><strong>mCurrentFocus=Window{b4f76dcd0 u0 com.genband.smartoffice/com.genband.omni.mobile.MainActivity}</strong></p>\r\n\r\n<p><strong>appPackage</strong>: com.genband.smartoffice</p>\r\n\r\n<p><strong>appActivity</strong>: com.genband.omni.mobile.MainActivity</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Wifi &Uuml;zerinden Android cihazı Appium ile &ccedil;alıştırmak;</h2>\r\n\r\n<ol>\r\n	<li>\r\n	<p>İlk olarak telefonu kablo ile bilgisayara bağlayalım ve konsol ekranından &quot;<strong>adb devices</strong>&quot; yazarak bağlı olduğunu g&ouml;relim.</p>\r\n	</li>\r\n	<li>\r\n	<p>PC ile Android cihaz aynı internet ağına bağlı olmalı</p>\r\n	</li>\r\n	<li>\r\n	<p>Android cihazımızın ip adresini &ouml;ğrenelim.</p>\r\n	</li>\r\n	<li>\r\n	<p>Konsol ekranından &quot;<strong>adb connect ip_adresi</strong>&quot; yazarak telefonumuzu kablo olmadan bilgisayarımıza bağlayalım.</p>\r\n	</li>\r\n</ol>\r\n', '2017-08-12 16:06:09', '2018-10-15 05:18:40', 20, 0),
(13, 'Appium ile İlk Test', 'appium_ile_İlk_test', 4, '<ul>\r\n	<li>Oluşturduğumuz ilk Eclipse projemizi a&ccedil;alım.</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/13/selenium-java-latest.png\" style=\"height:167px; width:200px\" /></p>\r\n\r\n<ul>\r\n	<li><strong>tests </strong>isminde paket ve i&ccedil;erisine <strong>AppiumTest.java</strong> oluşturalım.</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/13/selenium-java-latest(1).png\" style=\"height:164px; width:500px\" /></p>\r\n\r\n<pre>\r\n<code class=\"language-java\">package tests;\r\n \r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\n \r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport io.appium.java_client.AppiumDriver;\r\nimport io.appium.java_client.MobileElement;\r\nimport io.appium.java_client.android.AndroidDriver;\r\n \r\npublic class AppiumTest {\r\n	\r\n	public static void main(String[] args) {\r\n		\r\n		//Set the Desired Capabilities\r\n		DesiredCapabilities caps = new DesiredCapabilities();\r\n		caps.setCapability(\"deviceName\", \"My Phone\");\r\n		caps.setCapability(\"udid\", \"ENUL6303030010\"); //Give Device ID of your mobile phone\r\n		caps.setCapability(\"platformName\", \"Android\");\r\n		caps.setCapability(\"platformVersion\", \"6.0\");\r\n		caps.setCapability(\"appPackage\", \"com.android.vending\");\r\n		caps.setCapability(\"appActivity\", \"com.google.android.finsky.activities.MainActivity\");\r\n		caps.setCapability(\"noReset\", \"true\");\r\n		\r\n		//Instantiate Appium Driver\r\n		try {\r\n			AppiumDriver driver = new AndroidDriver(new URL(\"http://0.0.0.0:4723/wd/hub\"), caps);\r\n			\r\n		} catch (MalformedURLException e) {\r\n			System.out.println(e.getMessage());\r\n		}\r\n	}\r\n \r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>a&nbsp;</p>\r\n\r\n<ul>\r\n</ul>\r\n', '2017-08-26 16:06:09', '2018-10-15 05:18:40', 19, 0),
(14, 'Android Cihazda Chrome Tarayıcı Çalıştırma', 'android_cihazda_chrome_tarayici_calistirma', 4, '<ul>\r\n	<li>Appium Server&#39;ı &ccedil;alıştırıyoruz</li>\r\n	<li>Android cihazımızı bilgisayara <a href=\"http://anilsenocak.tk/post/mobile_uygulamanin_apppackage_ve_appactivity_bilgilerini_ogrenme\">wifi veya kablo</a> &uuml;zerinden bağlıyoruz.</li>\r\n	<li>Daha &ouml;nce oluşturduğumuz Eclipse projemiz i&ccedil;ersindeki <strong>test </strong>paketinin altına <strong>ChromeTest.java</strong> isminde yeni bir java dosyası oluşturuyoruz.</li>\r\n	<li><a href=\"/upload/files/chromedriver.rar\">ChromeDriver</a>&#39;ı indiriyoruz.</li>\r\n</ul>\r\n\r\n<pre>\r\n<code class=\"language-java\">\r\npackage tests;\r\n\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\n\r\nimport org.openqa.selenium.remote.DesiredCapabilities;\r\nimport io.appium.java_client.AppiumDriver;\r\nimport io.appium.java_client.MobileElement;\r\nimport io.appium.java_client.android.AndroidDriver;\r\n\r\npublic class ChromeTest {\r\n\r\n	public static void main(String[] args) {\r\n		\r\n		//Set the Desired Capabilities\r\n		DesiredCapabilities caps = new DesiredCapabilities();\r\n		caps.setCapability(\"deviceName\", \"My Phone\");\r\n		caps.setCapability(\"udid\", \"ip_adresi\"); //Give Device ID of your mobile phone\r\n		caps.setCapability(\"platformName\", \"Android\");\r\n		caps.setCapability(\"platformVersion\", \"7.0\");\r\n		caps.setCapability(\"browserName\", \"Chrome\");\r\n		caps.setCapability(\"noReset\", true);\r\n		\r\n		//Set ChromeDriver location\r\n		System.setProperty(\"webdriver.chrome.driver\",\"C:\\\\chromedriver.exe\");\r\n		\r\n		//Instantiate Appium Driver\r\n		AppiumDriver&lt;MobileElement&gt; driver = null;\r\n		try {\r\n			driver = new AndroidDriver&lt;MobileElement&gt;(new URL(\"http://127.0.0.1:4723/wd/hub\"), caps);\r\n			\r\n		} catch (MalformedURLException e) {\r\n			System.out.println(e.getMessage());\r\n		}\r\n				\r\n		//Open URL in Chrome Browser\r\n		driver.get(\"http://anilsenocak.tk\");\r\n	}\r\n}</code></pre>\r\n\r\n<ul>\r\n	<li><strong>ip_adresi </strong>yazan yere konsol ekranından <strong><em>adb devices</em></strong> yazdıktan sonra &ccedil;ıkan <em>uuid </em>bilgisini yazıyoruz.(wifi &uuml;zerinden bağlanmış ise <em>ip_adresi:port_numarası</em> şeklinde &ccedil;ıkacaktır)</li>\r\n	<li>Projemizi kaydedip &ccedil;alıştırdıktan sonra Android cihazımızdan chrome tarayıcının a&ccedil;ıldığını g&ouml;receğiz.</li>\r\n</ul>\r\n', '2018-01-20 16:06:09', '2018-10-15 05:18:40', 18, 0),
(15, 'Appium Inspectors', 'appium_inspectors', 4, '<p><strong>UIAutomatorViewer;</strong></p>\r\n\r\n<p><strong>CMD&nbsp;</strong>ekranında&nbsp;UIAutomatorViewer&nbsp;yazarak uygulamayı a&ccedil;alım ve hangi uygulamanın i&ccedil;ersindekileri incelemek i&ccedil;in uygulamayı a&ccedil;alım</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/15/type-uiautomatorviewer-in-cmd.png\" style=\"height:183px; width:541px\" /></p>\r\n\r\n<p>Biraz bekledikten sonra Device Screenshot kısmında ekran g&ouml;r&uuml;nt&uuml;s&uuml;n&uuml; inceleyebiliriz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/15/type-uiautomatorviewer-in-cmd(1).png\" style=\"height:486px; width:481px\" /></p>\r\n', '2018-03-14 16:06:09', '2018-10-15 05:18:40', 17, 0),
(16, 'Selenium Cheat Sheets', 'selenium_cheat_sheets', 1, '<ol>\r\n	<li>\r\n	<p>Open a browser</p>\r\n\r\n	<pre>\r\n<code class=\"language-java\"># start an instance of firefox with selenium-webdriver\r\ndriver = Selenium::WebDriver.for :firefox\r\n# :chrome -&gt; chrome\r\n# :ie     -&gt; iexplore\r\n</code></pre>\r\n	</li>\r\n</ol>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Go to a specified URL</p>\r\n\r\n	<pre>\r\n<code class=\"language-java\">driver.get \'http://google.com\'\r\ndriver.navigate.to \'http://google.com\'\r\n</code></pre>\r\n\r\n	<p><code>NOTE</code>&nbsp;-- the WebDriver may not wait for the page to load, you&#39;d better using explicit and implicit waits.</p>\r\n	</li>\r\n	<li>\r\n	<p>Locating Elements</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p><code>find_element</code>&nbsp;-- Find the first element matching the given arguments.</p>\r\n		</li>\r\n		<li>\r\n		<p><code>find_elements</code>&nbsp;-- Find all elements matching the given arguments</p>\r\n		</li>\r\n		<li>\r\n		<p>By ID</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;input id=\"q\"&gt;...&lt;/input&gt; #example html \r\n\r\nelement = driver.find_element(:id, \"q\")\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By Class Name</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;div class=\"highlight-java\" style=\"display: none; \"&gt;...&lt;/div&gt; # example html\r\n\r\nelement = driver.find_element(:class, \'highlight-java\')\r\n# or\r\nelement = driver.find_element(:class_name, \'highlight-java\')\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By Tag Name</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;div class=\"highlight-java\" style=\"display: none; \"&gt;...&lt;/div&gt; #example html\r\n\r\nelement = driver.find_element(:tag_name, \'div\')\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By Name</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;input id=\"q\" name=\'search\' type=\'text\'&gt;…&lt;/input&gt; #example html\r\n\r\nelement = driver.find_element(:name, \'search\')\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By Link Text</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;a href=\"http://www.google.com/search?q=cheese\"&gt;cheese&lt;/a&gt; # example html\r\n\r\nelement = driver.find_element(:link, \'cheese\')\r\n# or			\r\nelement = driver.find_element(:link_text, \'cheese\')\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By Partial Link Text</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">&lt;a href=\"http://www.google.com/search?q=cheese\"&gt;search for cheese&lt;/a&gt; # example html\r\nelement = driver.find_element(:partial_link_text, \'cheese\')	\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>By XPath</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\"># &lt;ul class=\"dropdown-menu\"&gt;\r\n#   &lt;li&gt;&lt;a href=\"/login/form\"&gt;Login&lt;/a&gt;&lt;/li&gt;\r\n#   &lt;li&gt;&lt;a href=\"/logout\"&gt;Logout&lt;/a&gt;&lt;/li&gt;\r\n# &lt;/ul&gt;\r\n\r\nelement = driver.find_element(:xpath, \'//a[@href=\'/logout\']\')\r\n</code></pre>\r\n\r\n		<ul>\r\n			<li>\r\n			<p><code>NOTE</code>&nbsp;-- When using Element#find_element with&nbsp;<code>:xpath</code>, be aware that,</p>\r\n\r\n			<ul>\r\n				<li>webdriver follows standard conventions: a search prefixed with &quot;//&quot; will search the entire document, not just the children of this current node.</li>\r\n				<li>Use &quot;.//&quot; to limit your search to the children of the receiving Element.</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n		<li>\r\n		<p>By CSS Selector</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\"># &lt;div id=\"food\"&gt;\r\n#   &lt;span class=\"dairy\"&gt;milk&lt;/span&gt;\r\n#   &lt;span class=\"dairy aged\"&gt;cheese&lt;/span&gt;\r\n# &lt;/div&gt;\r\n  \r\nelement = driver.find_element(:css, #food span.dairy)\r\n</code></pre>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p>Element&#39;s operation</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>Button/Link/Image</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">driver.find_element(:id, \'BUTTON_ID).click\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>Text Filed</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">driver.find_element(:id, \'TextArea\').send_keys \'InputText\' # input some text\r\n# send keyboard actions, press `ctral+a` &amp; `backspace`\r\ndriver.find_element(:id, \'TextArea\').send_keys [:contol, \'a\'], :backspace\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>Checkbox/Radio</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\"># check if it is selected\r\ndriver.find_element(:id, \'CheckBox\').selected?\r\n# select the element\r\ndriver.find_element(:id, \'CheckBox\').click\r\n# deselect the element\r\ndriver.find_element(:id, \'CheckBox\').clear\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>Select</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\"># get the select element	\r\nselect = driver.find_element(:tag_name, \"select\")\r\n# get all the options for this element\r\nall_options = select.find_elements(:tag_name, \"option\")\r\n# select the options\r\nall_options.each do |option|\r\n puts \"Value is: \" + option.attribute(\"value\")\r\n option.click\r\nend\r\n\r\n# anthoer way is using the Select class after seleniun-webdriver 2.14		\r\nelement= driver.find_element(:tag_name,\"select\")\r\nselect=Selenium::WebDriver::Support::Select.new(element)\r\nselect.deselect_all()\r\nselect.select_by(:text, \"Edam\")\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>visibility</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">driver.find_element(:id,\'Element\').displayed?\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>get text</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">driver.find_element(:id,\'Element\').text\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>get attribue</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">driver.find_element(:id, \'Element\').attribute(\'class\')\r\n</code></pre>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p>Driver&#39;s operation</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>execute javascript</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  driver.execute_script(\"return window.location.pathname\")\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>wait for a specific element to show up</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  # set the timeout to 10 seconds\r\n  wait = Selenium::WebDriver::Wait.new(:timeout =&gt; 10)\r\n  # wait 10 seconds until the element appear\r\n  wait.until { driver.find_element(:id =&gt; \"foo\") }\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>implicit waits</p>\r\n		</li>\r\n	</ul>\r\n\r\n	<p>An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available</p>\r\n\r\n	<pre>\r\n<code class=\"language-java\">	driver = Selenium::WebDriver.for :firefox\r\n	# set the timeout for implicit waits as 10 seconds\r\n	driver.manage.timeouts.implicit_wait = 10\r\n	\r\n	driver.get \"http://somedomain/url_that_delays_loading\"\r\n	element = driver.find_element(:id =&gt; \"some-dynamic-element\")\r\n</code></pre>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>switch between frames</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  # switch to a frame\r\n  driver.switch_to.frame \"some-frame\" # name or id\r\n  driver.switch_to.frame driver.find_element(:id, \'some-frame\') # frame element\r\n  \r\n  # switch back to the main document\r\n  driver.switch_to.default_content\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>swich between windows</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  driver.window_handles.each do |handle|\r\n    driver.switch_to.window handle\r\n  end\r\n</code></pre>\r\n		</li>\r\n		<li>\r\n		<p>handle javascript dialog</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  # get the alert\r\n  a = driver.switch_to.alert\r\n  # operation on the alert\r\n  if a.text == \'A value you are looking for\'\r\n    a.dismiss\r\n  else\r\n    a.accept\r\n  end\r\n</code></pre>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p>Cookies</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>Delete cookies</p>\r\n\r\n		<pre>\r\n<code class=\"language-java\">  # You can delete cookies in 2 ways\r\n  # By name\r\n  driver.manage.delete_cookie(\"CookieName\")\r\n  # Or all of them\r\n  driver.manage.delete_all</code></pre>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><iframe frameborder=\"0\" height=\"500\" scrolling=\"no\" src=\"/upload/files/1.pdf\" width=\"500\"></iframe><iframe frameborder=\"0\" height=\"500\" scrolling=\"no\" src=\"/upload/files/3.pdf\" width=\"500\"></iframe></p>\r\n\r\n<p>&nbsp;</p>\r\n', '2018-05-20 16:06:09', '2018-10-15 05:18:40', 16, 0),
(17, '15 Cucumber Soruları & Cevapları', '15_cucumber_sorulari___cevaplari', 3, '<p><strong>1) Cucumber nedir ve avantajları nelerdir?</strong></p>\r\n\r\n<p>D&uuml;z bir metinde yazılmış fonksiyonel testleri &ccedil;alıştırmak i&ccedil;in Cuucmber aracı kullanılır. Ruby programlama dilinde yazılmıştır.</p>\r\n\r\n<p><strong>Advantajları</strong></p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Kodlayamayan iş paydaşlarını &ccedil;&ouml;zebilirsiniz.</p>\r\n	</li>\r\n	<li>\r\n	<p>Son kullanıcı deneyimi &ouml;nceliklidir.</p>\r\n	</li>\r\n	<li>Tekrarlanabilir kod kullanımı</li>\r\n</ul>\r\n\r\n<p><strong>2) Cucumber test senaryosunu &ccedil;alıştırmak i&ccedil;in hangi 2 dosya gereklidir?</strong></p>\r\n\r\n<ul>\r\n	<li>Features</li>\r\n	<li>Step Definition</li>\r\n</ul>\r\n\r\n<p><strong>3) Cucumber&#39;daki feature dosaysı nedir? Ne i&ccedil;erir?</strong></p>\r\n\r\n<p>Feature dosyası, cucumber&#39;daki kodun y&uuml;r&uuml;t&uuml;lmesi i&ccedil;in gerekli parametrelerden veya koşullardan oluşur</p>\r\n\r\n<ul>\r\n	<li>Feature</li>\r\n	<li>Scenario</li>\r\n	<li>Scenario Outline</li>\r\n	<li>Given</li>\r\n	<li>When</li>\r\n	<li>Then</li>\r\n</ul>\r\n\r\n<p><strong>4)&nbsp;D&uuml;z metinde davranışa dayalı test &ouml;rneği yazın?</strong></p>\r\n\r\n<ul>\r\n	<li><strong>Feature:&nbsp;</strong>Visit&nbsp;<strong>XYZ</strong>&nbsp;page in abc.com</li>\r\n	<li><strong>Scenario</strong><strong>&nbsp;:&nbsp;</strong>Visit abc.com</li>\r\n	<li><strong>Given:</strong>&nbsp; I am on abc.com</li>\r\n	<li><strong>When:&nbsp;&nbsp;</strong>I click on XYZ page</li>\r\n	<li><strong>Then:&nbsp;&nbsp;</strong>I should see ABC page</li>\r\n</ul>\r\n\r\n<p><strong>5)&nbsp;Feature dosyasında senaryo anahatının ne olduğunu a&ccedil;ıklayınız.</strong></p>\r\n\r\n<p><strong>Senaryo Anahatı</strong>:&nbsp;Senaryo taslağını kullanarak birden &ccedil;ok veri k&uuml;mesi i&ccedil;in aynı senaryo y&uuml;r&uuml;t&uuml;lebilir. Veriler, (I&nbsp;&nbsp; I)&nbsp;ile ayrılan bir tabular yapı tarafından sağlanır.&nbsp;</p>\r\n\r\n<p><strong>6)&nbsp;Step Definition Nedir?</strong></p>\r\n\r\n<p>Step Definition, &ouml;zellik dosyasında belirtilen &ouml;zelliğin ger&ccedil;ek kod uygulamasıdır.</p>\r\n\r\n<p><strong>7) &ldquo;Given&rdquo; fonksiyonu kullanarak step definition &ouml;rneği yazınız.</strong></p>\r\n\r\n<p>Kullanıcı Yahoo sitesine girişi i&ccedil;in;</p>\r\n\r\n<p>Given (/^ I am on www.yahoo.com$/) do</p>\r\n\r\n<p>Browser.goto &ldquo;http://www.yahoo.com&rdquo;</p>\r\n\r\n<p>end &ndash; This will visit www.yahoo.com</p>\r\n\r\n<p><strong>8) Jbehave ve Cucumber farkı nedir?</strong></p>\r\n\r\n<p>Cucumber ve Jbehave aynı ama&ccedil; i&ccedil;in olsalar da tamamen farklı bir framework yapısına sahiplerdir.</p>\r\n\r\n<ul>\r\n	<li>Jbehave, Java tabanlı. Cucumber, Ruby tabanlıdır.</li>\r\n	<li>Jbehave, hikayaleri temel alır.Cucumber, &ouml;zellikleri tanımlıdır.</li>\r\n</ul>\r\n\r\n<p><strong>9)&nbsp;Explain what is test harness?</strong></p>\r\n\r\n<p>A test harness for cucumber and rspec allows for separating responsibility between setting up the context and interacting with the browser and cleaning up the step definition files</p>\r\n\r\n<p><strong>10)&nbsp;Explain when to use Rspec and when to use Cucumber?</strong></p>\r\n\r\n<ul>\r\n	<li>Rspec is used for Unit Testing</li>\r\n	<li>Cucumber is used behaviour driven development. Cucumber can be used for System and Integration Tests</li>\r\n</ul>\r\n\r\n<p><strong>11)&nbsp;What is the language used for expressing scenario in feature file ?</strong></p>\r\n\r\n<p>Gherkin language is used to express scenario in feature files and ruby files containing unobtrusive automation for the steps in scenarios</p>\r\n\r\n<p><strong>12)&nbsp;Explain what is regular expressions?</strong></p>\r\n\r\n<p>A regular expression is a pattern describing a certain amount of text.&nbsp; The most basic regular expression consists of a single literal character</p>\r\n\r\n<p><strong>13)&nbsp;Explain what is BDD (Behaviour Driven Development) ?</strong></p>\r\n\r\n<p>BDD or Behaviour driven development is a process of developing software based on TDD (Test Driven Development) which focusses on behavioural specification of software units.</p>\r\n\r\n<p><strong>14)&nbsp;What softare do you need to run a Cucumber Web Test ?</strong></p>\r\n\r\n<ul>\r\n	<li>Ruby and its Development Kit</li>\r\n	<li>Cucumber</li>\r\n	<li>IDE like ActiveState</li>\r\n	<li>Watir ( To simulate browser)</li>\r\n	<li>Ansicon and rspec (if required)</li>\r\n</ul>\r\n\r\n<p><strong>15)&nbsp;What does a features/ support file contains?</strong></p>\r\n\r\n<p>Features/ support file contains supporting ruby code. Files in support load before those in step_definitions, which can be useful for environment configuration.</p>\r\n\r\n<p><a href=\"https://career.guru99.com/top-15-cucumber-interview-questions/?format=pdf\" onclick=\"ga(\'send\',\'event\',\'download\',\'PDF\',\'PDF Downloaded\');\" rel=\"nofollow\" target=\"_blank\" title=\"Download PDF\"><img alt=\"Download PDF\" src=\"https://career.guru99.com/wp-content/plugins/wp-post-to-pdf-enhanced/asset/images/pdf.png\" />&nbsp;Download PDF</a></p>\r\n', '2018-06-24 16:06:09', '2018-10-15 05:18:40', 15, 0),
(18, 'Temiz Kod Yazımı', 'temiz_kod_yazimi', 7, '<h3><strong>Mantıklı ve anlamlı değişken isimleri kullanın.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">$ymdstr = $moment-&gt;format(\'y-m-d\');</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$currentDate = $moment-&gt;format(\'y-m-d\');</code></pre>\r\n\r\n<h3><strong>Aynı değişken t&uuml;rleri i&ccedil;in aynı kelime hazinesi kullanın.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">getUserInfo();\r\ngetUserData();\r\ngetUserRecord();\r\ngetUserProfile();</code></pre>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">getUser();</code></pre>\r\n\r\n<h3><strong>Aranabilen isimler kullanın.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">$result = $serializer-&gt;serialize($data, 448); // What the heck is 448 for?</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$json = $serializer-&gt;serialize($data, JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE);</code></pre>\r\n\r\n<p>-----</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">if ($user-&gt;access &amp; 4) {\r\n    // What the heck is 4 for?\r\n}</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">class User{\r\n    const ACCESS_READ = 1;\r\n    const ACCESS_CREATE = 2;\r\n    const ACCESS_UPDATE = 4;\r\n    const ACCESS_DELETE = 8;\r\n}\r\nif ($user-&gt;access &amp; User::ACCESS_UPDATE) {\r\n    // do edit ...\r\n}</code></pre>\r\n\r\n<h3><strong>Gereksiz i&ccedil;erikleri ekleme.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\nclass Car{\r\n    public $carMake;\r\n    public $carModel;\r\n    public $carColor;\r\n\r\n    //...\r\n}\r\n</code></pre>\r\n\r\n<h4>yerine,</h4>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\nclass Car{\r\n    public $make;\r\n    public $model;\r\n    public $color;\r\n\r\n    //...\r\n}\r\n</code></pre>\r\n\r\n<h3><strong>2 veya daha az fonksiyon parametresi kullanın.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\nfunction createMenu($title, $body, $buttonText, $cancellable) {\r\n    // ...\r\n}\r\n</code></pre>\r\n\r\n<h4>yerine,</h4>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\nclass MenuConfig{\r\n    public $title;\r\n    public $body;\r\n    public $buttonText;\r\n    public $cancellable = false;\r\n}\r\n\r\n$config = new MenuConfig();\r\n$config-&gt;title = \'Foo\';\r\n$config-&gt;body = \'Bar\';\r\n$config-&gt;buttonText = \'Baz\';\r\n$config-&gt;cancellable = true;\r\n\r\nfunction createMenu(MenuConfig $config) {\r\n    // ...\r\n}\r\n</code></pre>\r\n\r\n<h3><strong>Fonksiyonalr tek birşey olmalıdır.</strong></h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\nfunction emailClients($clients) {\r\n    foreach ($clients as $client) {\r\n        $clientRecord = $db-&gt;find($client);\r\n        if ($clientRecord-&gt;isActive()) {\r\n            email($client);\r\n        }\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<h4>yerine,</h4>\r\n\r\n<pre>\r\n<code class=\"language-php\">function emailClients($clients) {\r\n    $activeClients = activeClients($clients);\r\n    array_walk($activeClients, \'email\');\r\n}\r\n\r\nfunction activeClients($clients) {\r\n    return array_filter($clients, \'isClientActive\');\r\n}\r\n\r\nfunction isClientActive($client) {\r\n    $clientRecord = $db-&gt;find($client);\r\n    return $clientRecord-&gt;isActive();\r\n}\r\n</code></pre>\r\n\r\n<p>Daha fazla detay ve i&ccedil;erik i&ccedil;in;&nbsp;<a href=\"https://github.com/jupeter/clean-code-php/blob/master/README.md\" target=\"_blank\">clean-code</a></p>\r\n', '2018-09-27 03:33:14', '2018-10-15 05:18:40', 14, 0),
(19, 'Laravel Nedir?', 'laravel_nedir_', 7, '<p>Laravel, PHP dili ile yazılmış, g&uuml;&ccedil;l&uuml; bir frameworkd&uuml;r. Taylor Otwell &ouml;nderliğinde geliştirmektedir.&nbsp; S&ouml;z dizimi basit ve anlamlıdır. Bu sebeple &ouml;ğrenmesi daha kolaydır. Laravel i&ccedil;inde bir&ccedil;ok yapıyı ve &ouml;zelliği barındırır. Bunun sonucunda basit web uygulamalarında ya da karmaşık web sayfalarında rahatlıkla kullanılabilir. Laravel&rsquo;in sloganı &ldquo;<strong>The PHP Framework For Web Artisans</strong>&rdquo; yani &ldquo;Web sanat&ccedil;ılarının PHP Framework&uuml;d&uuml;r.</p>\r\n\r\n<p>Laravel, profesyonel ya da amat&ouml;r web geliştiricileri tarafından kullanılabilir. OOP yapısı sebebiyle daha derli toplu, temiz, okunabilir kod yazılmasına olanak sağlar.</p>\r\n\r\n<p>Laravel ile geliştirme yapmaya başlamak i&ccedil;in, HTML/CSS bilgisine ve orta seviye PHP bilgisine ihtiya&ccedil; vardır.&nbsp;</p>\r\n\r\n<h3><strong>&Ouml;nemli Bilgiler</strong></h3>\r\n\r\n<ol>\r\n	<li>Bağımlılık y&ouml;neticisi (Dependency Manager) olarak&nbsp;<a href=\"https://tr.wikipedia.org/wiki/Composer\" rel=\"nofollow\" target=\"_blank\"><strong>Composer</strong></a>&nbsp;kullanır.</li>\r\n	<li>İ&ccedil;inde&nbsp;<a href=\"https://laravel.com/docs/5.4/eloquent\" rel=\"nofollow\" target=\"_blank\"><strong>Eloquent ORM</strong></a>&nbsp;(Object Relational Mapping)&rsquo;yi barındırır. Bu yapıda veritabanındaki her bir tabloya karşılık gelen bir model sınıfı bulunur. Bu sayede uzun sorgu c&uuml;mleleri yerine &ccedil;ok daha basit şekilde veritabanı sorguları yapmanızı sağlar. Ayrıca farklı veritabanlarından (Mysql, PostgreSql, MongoDB vb.) sorgularınızda değişiklik yapmadan sorgu yapabilme imk&acirc;nı sunar.</li>\r\n	<li>Template engine olarak &ldquo;<a href=\"https://laravel.com/docs/5.4/blade#introduction\" rel=\"nofollow\" target=\"_blank\"><strong>Blade</strong></a>&rdquo; kullanmaktadır. MVC(Model, View, Controller) mimarisinde View (V) kısmında denk gelmektedir. Bu yapı sayesinde php ve html kodlarımızı birbirinden ayırma imkanı sağlar.</li>\r\n	<li>Gelişmiş&nbsp;<strong>routing</strong>&nbsp;yapısı sayesinde URL yapınızı hızlı ve kolay bir şekilde filtreleyebilir, controllera y&ouml;nlendirebilirsiniz.</li>\r\n	<li>Laravelin i&ccedil;erisinde kimlik doğrulama (<strong>Authentication</strong>) yapısı hazır olarak bulunmaktadır. Sadece birka&ccedil; komut yardımıyla <em>login/logout/register </em>gibi kullanıcı işlemleri uygulamanıza dahil edilebilir.</li>\r\n	<li>Sadece birka&ccedil; satır kod ile verileri otomatik sayfalama (<strong>Pagination</strong>) &ouml;zelliği bulunmaktadır.</li>\r\n	<li>Form ve veri girişi kısımlarında b&uuml;t&uuml;nleşik&nbsp;<a href=\"https://tr.wikipedia.org/wiki/XSRF\" rel=\"nofollow\" target=\"_blank\"><strong>CSRF</strong></a>&nbsp;koruması bulunmaktadır.</li>\r\n	<li>Migration ve seeder yapısıyla veritabanında tablo oluşturma, versiyonlama ve veri girişi işlemleri daha basit şekilde y&ouml;netilebilir.</li>\r\n	<li>Yapısında bir&ccedil;ok &ldquo;<a href=\"https://symfony.com/\" rel=\"nofollow\" target=\"_blank\"><strong>symfony framework</strong></a>&rdquo; bileşenini barındırmaktadır. Ama Laravel &ouml;ğrenmemiz i&ccedil;in bizim symfony framework bilmemize gerek yoktur.</li>\r\n</ol>\r\n\r\n<h3><strong>Laravel i&ccedil;in sunucu gereklilikleri nelerdir?</strong></h3>\r\n\r\n<ol>\r\n	<li>PHP &gt;= 5.6.4</li>\r\n	<li>OpenSSL PHP Extension</li>\r\n	<li>PDO PHP Extension</li>\r\n	<li>Mbstring PHP Extension</li>\r\n	<li>Tokenizer PHP Extension</li>\r\n	<li>XML PHP Extension</li>\r\n</ol>\r\n\r\n<p>Belirli bir PHP versiyonuna ve belirli mod&uuml;llere ihtiyacımız bulunmaktadır.&nbsp;Peki, biz bu gereklilikleri nasıl sağlayacağız?</p>\r\n\r\n<ol>\r\n	<li>Bunun i&ccedil;in &ldquo;<a href=\"https://laravel.com/docs/5.4/homestead\" rel=\"noopener nofollow\" target=\"_blank\">Laravel Homestead</a>&rdquo; kullanabilirsiniz. Bu hepsi bir arada (all in one) bir &ccedil;&ouml;z&uuml;md&uuml;r.</li>\r\n	<li>PHP&rsquo;yi kendiniz kurabilirsiniz.</li>\r\n	<li>Wamp/Xammp gibi bir &ccedil;&ouml;z&uuml;m kullanabilirsiniz.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<h2><strong>Laravel Eğitim Serisi</strong></h2>\r\n\r\n<ul>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_kurulumu\" target=\"_blank\">Laravel Kurulumu</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_uygulama_yapisi\" target=\"_blank\">Laravel Uygulama Yapısı</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_konfigurasyonu\" target=\"_blank\">Laravel Konfig&uuml;rasyonu</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_route_sistemi\" target=\"_blank\">Laravel Route Sistemi</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_controller_yapisi\" target=\"_blank\">Laravel Controller Yapısı</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_controller_veri_aktarimi\" target=\"_blank\">Laravel Controller Veri Aktarımı</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_blade_templates\" target=\"_blank\">Laravel Blade Templates</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/laravel_model_yapisi\" target=\"_blank\">Laravel Model Yapısı</a></p>\r\n	</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-27 05:16:33', '2018-10-11 09:14:21', 3, 1),
(20, 'Laravel Kurulumu', 'laravel_kurulumu', 7, '<ul>\r\n	<li><a href=\"https://www.apachefriends.org/tr/index.html\" target=\"_blank\">XAMPP</a> veya <a href=\"http://www.wampserver.com/en/\" target=\"_blank\">WAMP</a> kurulumunu ger&ccedil;ekleştiriyoruz<a href=\"https://www.mobilhanem.com/wamp-server-kurulumu-ve-merhaba-dunya/\" rel=\"noopener\" target=\"_blank\">.</a></li>\r\n	<li><a href=\"https://getcomposer.org/download/\" target=\"_blank\">Composer</a>&#39;i kuruyoruz.</li>\r\n	<li><a href=\"https://laravel.com/\" target=\"_blank\">Laravel</a>&#39;i kuruyoruz.</li>\r\n</ul>\r\n\r\n<p>&Ouml;ncelikle Laravel&rsquo;i kurmak istediğiniz dizine ge&ccedil;ip aşağıdaki kodlardan dilediğimizi &ccedil;alıştırıyoruz.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-bash\">cd c:\\wamp\\www</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>Dizine ge&ccedil;iyoruz.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-bash\">composer create-project --prefer-dist laravel/laravel proje_ismi</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>Proje&#39;yi oluşturduğumuz dizine ge&ccedil;iyoruz.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-bash\">cd proje_ismi</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>Laravel projemizi &ccedil;alıştırıyoruz.</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-bash\">php artisan serve</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p><a href=\"http://127.0.0.1:8000/\" rel=\"nofollow\">http://127.0.0.1:8000/</a>&nbsp;adresinden kurmuş olduğumuz Laravel&rsquo;e ulaşabiliyoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/laravel-development-environment-1024x481.jpg\" style=\"height:423px; width:900px\" /></p>\r\n\r\n<ul>\r\n</ul>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-27 07:45:57', '2018-10-15 05:18:40', 13, 0),
(21, 'Laravel Uygulama Yapısı', 'laravel_uygulama_yapisi', 7, '<h3><strong>Laravel Anadizin Yapısı</strong></h3>\r\n\r\n<ul>\r\n	<li><strong>app:&nbsp;</strong>Bu klas&ouml;r i&ccedil;erisinde uygulamanın asıl kodları bulunacaktır.</li>\r\n	<li><strong>bootstrap:&nbsp;</strong>Uygulamanın autoload ve cache (&ouml;nbellek) kısımlarını barındırmaktadır.</li>\r\n	<li><strong>config:&nbsp;</strong>Uygulamanın ayar dosyaları bu klas&ouml;rde bulunmaktadır.</li>\r\n	<li><strong>database:&nbsp;</strong>Veritabanı operasyonları i&ccedil;in kullanılan &ldquo;Seeds&rdquo; ve &ldquo;Migrations&rdquo; bu klas&ouml;rde bulunmaktadır.</li>\r\n	<li><strong>public:&nbsp;</strong>Bu klas&ouml;r uygulamanın &ldquo;document root&rdquo; kısmıdır. Laravel&rsquo;in &ccedil;alışmasını başlatır ayrıca &ldquo;Assets&rdquo; (Javascrip, CSS, Resimler vb.) kısmını barındırır.</li>\r\n	<li><strong>resources:&nbsp;</strong>Bu klas&ouml;rde herhangi bir işlem yapılmamış (Sıkıştırma, Birleştirme, Gizleme vs) dosyalar, view (g&ouml;r&uuml;n&uuml;m) dosyaları ve dil dosyaları bulunmaktadır.</li>\r\n	<li><strong>storage:&nbsp;</strong>Bu klas&ouml;r uygulamanın depolama alanıdır. İ&ccedil;erisinde, dosya y&uuml;klemelerini, &ouml;nbellekleme (cache) dosyalarını ve uygulamanın log dosyalarını barındırır.</li>\r\n	<li><strong>tests:&nbsp;</strong>Bu klas&ouml;r test dosyalarını barındırır.</li>\r\n	<li><strong>vendor:&nbsp;</strong>Bu klas&ouml;rde uygulamanın &ldquo;Composer Dependencies&rdquo; (paket bağımlılıkları) bulunmaktadır.</li>\r\n</ul>\r\n\r\n<h3><strong>Laravel App Klas&ouml;r&uuml; Yapısı</strong></h3>\r\n\r\n<p>Uygulamamızın ana klas&ouml;r&uuml; burasıdır diyebiliriz. Ayrıca i&ccedil;erisinde bir&ccedil;ok ek klas&ouml;r bulunmaktadır.</p>\r\n\r\n<ul>\r\n	<li><strong>Console:</strong>&nbsp;T&uuml;m &ldquo;artisan&rdquo; komutları bu klas&ouml;rde bulunmaktadır.</li>\r\n	<li><strong>Http:</strong>&nbsp;&ldquo;Controllers&rdquo;, &ldquo;Middleware&rdquo;, &ldquo;Request&rdquo; bu klas&ouml;rde bulunmaktadır.</li>\r\n	<li><strong>Exceptions:</strong>&nbsp;&Ouml;zel &ldquo;Exception Handlers&rdquo; bu klas&ouml;rde bulunmaktadır.</li>\r\n	<li><strong>Providers:&nbsp;</strong>&nbsp;&ldquo;Providers&rdquo; (Servis Sağlayıcılar) bu klas&ouml;rde bulunmaktadır.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-27 08:29:21', '2018-10-15 05:18:40', 12, 0),
(22, 'Laravel Konfigürasyonu', 'laravel_konfigurasyonu', 7, '<h3><strong>Kurulum Sonrası Kontroller</strong></h3>\r\n\r\n<p>&Ouml;ncelikle, Laravel kurulumundan sonra yapmamız gereken birka&ccedil; kontrol ve işlem bulunmaktadır.</p>\r\n\r\n<ol>\r\n	<li>Ana dizinde bulunan &ldquo;<em>storage</em>&rdquo; ve &ldquo;<em>bootstrap/cache</em>&rdquo; klas&ouml;rlerinin yazma izni kontrol&uuml; yapılmadır, yazma izni yoksa yazma izni verilmelidir.</li>\r\n	<li>&ldquo;<strong>php artisan key:generate</strong>&rdquo; komutu ile uygulama anahtarı oluşturulmalıdır. Bu anahtar session ve diğer şifrelenmiş verilerin g&uuml;venliğinde kullanılacaktır.</li>\r\n	<li>Ana dizinde &ldquo;<em>.env</em>&rdquo; dosyası olup olmadığı kontrol&uuml; yapılmadır. Bu dosya composer ile kurulumda yada &ldquo;<strong>php artisan key:generate</strong>&rdquo; komutuyla otomatik olarak oluşmalıdır. Eğer yoksa &ldquo;<em>.env.example</em>&rdquo; dosyasının adı &ldquo;<em>.env</em>&rdquo; yapılıp, &ldquo;<strong>php artisan key:generate</strong>&rdquo; komutu tekrar &ccedil;alıştırılmalıdır.</li>\r\n</ol>\r\n\r\n<blockquote>\r\n<p>&ldquo;<em><strong>.env</strong></em>&rdquo; dosyası&nbsp;geliştirme ortamımız ile ilgili değişkenleri i&ccedil;ermektedir. Bu dosyanın i&ccedil;eriğine ayrıntılı olarak değineceğiz.</p>\r\n</blockquote>\r\n\r\n<h3><strong>Konfig&uuml;rasyon Dosyaları&nbsp; ve Geliştirme Ortamı Konfig&uuml;rasyonu</strong></h3>\r\n\r\n<p>Bu kontrolleri yaptıktan sonra projemizin ana dizini altında &ldquo;<strong>config</strong>&rdquo; dizini altındaki bir&ccedil;ok yapılandırma dosyasına g&ouml;z atabiliriz.</p>\r\n\r\n<ul>\r\n	<li><strong>app.php</strong>: Bu dosyada uygulamamız ile ilgili ayarlar bulunmaktadır. (Uygulama adı, adresi, debug durumu, dil ve timezone gibi ayarlar bulunmaktadır.)</li>\r\n	<li><strong>database.php</strong>: Veritabanı ile ilgili ayarlar bulunmaktadır. (Varsayılan veritabanı bağlantı t&uuml;r&uuml;, desteklenen veritabanı bağlantı bilgileri vb. ayarlar bulunmaktadır. )</li>\r\n</ul>\r\n\r\n<p>database.php i&ccedil;eriği:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">\'connections\' =&gt; [\r\n\r\n        \'sqlite\' =&gt; [\r\n            \'driver\' =&gt; \'sqlite\',\r\n            \'database\' =&gt; env(\'DB_DATABASE\', database_path(\'database.sqlite\')),\r\n            \'prefix\' =&gt; \'\',\r\n        ],\r\n\r\n        \'mysql\' =&gt; [\r\n            \'driver\' =&gt; \'mysql\',\r\n            \'host\' =&gt; env(\'DB_HOST\', \'127.0.0.1\'),\r\n            \'port\' =&gt; env(\'DB_PORT\', \'3306\'),\r\n            \'database\' =&gt; env(\'DB_DATABASE\', \'forge\'),\r\n            \'username\' =&gt; env(\'DB_USERNAME\', \'forge\'),\r\n            \'password\' =&gt; env(\'DB_PASSWORD\', \'\'),\r\n            \'unix_socket\' =&gt; env(\'DB_SOCKET\', \'\'),\r\n            \'charset\' =&gt; \'utf8mb4\',\r\n            \'collation\' =&gt; \'utf8mb4_unicode_ci\',\r\n            \'prefix\' =&gt; \'\',\r\n            \'strict\' =&gt; true,\r\n            \'engine\' =&gt; null,\r\n        ],\r\n\r\n    ],</code></pre>\r\n\r\n<p><img alt=\"\" src=\"https://www.mobilhanem.com/wp-content/uploads/2017/07/laravel-database-configi.png\" style=\"height:486px; width:597px\" /></p>\r\n\r\n<p>Bu kısımda &ouml;rnek olarak ele aldığımız <strong>database.php</strong> i&ccedil;erisinde&nbsp;&ldquo;<strong><em>env</em></strong>&rdquo; fonksiyonunun kullanıldığını g&ouml;rmekteyiz. &quot;<strong>.env</strong>&quot; dosyası geliştirme ortamımızın konfig&uuml;rasyon bilgilerini tek bir yerden y&ouml;netmemizi sağlar.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">env(\'.env dosyasındaki parametre adı\', \'varsayılan değer\')</code></pre>\r\n\r\n<p>Birden &ccedil;ok geliştirme ortamı olması durumunda, .env.testing, .env.production, .env.local gibi ayarlamalar yapılabilir.</p>\r\n\r\n<h3><strong>Bakım Modu (maintenance mode)</strong></h3>\r\n\r\n<p>Son olarak Laravel de&nbsp;<strong>bakım modu</strong>ndan (<strong>maintenance mode</strong>)&nbsp; da bahsedelim.</p>\r\n\r\n<p>Bakım modu aktif edildiğinde, sitenize gelen ziyaret&ccedil;iler bakım modu ekranını g&ouml;r&uuml;rler. Bu s&uuml;re&ccedil;te sitenizde herhangi bir işlem yapılamaz. Siz de gerekli gerekli g&uuml;ncelleme veya geliştirmeleri sitenize uygulayabilirsiniz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan down</code></pre>\r\n\r\n<p>komutuyla aktif edilir.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan up</code></pre>\r\n\r\n<p>komutuyla inaktif edilir.</p>\r\n\r\n<p>Ayrıntılı mesaj vermek ve belirli s&uuml;relerde ziyaret&ccedil;inin otomatik deneme yapmasını isterseniz,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan down --message=\"Veritabanı güncelleniyor.\" --retry=60</code></pre>\r\n\r\n<p><img alt=\"\" src=\"https://www.mobilhanem.com/wp-content/uploads/2017/07/laravel-bakim-modu.png\" style=\"height:410px; width:900px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-27 09:59:56', '2018-10-15 05:18:40', 11, 0),
(23, 'Appium Nedir?', 'appium_nedir_', 4, '<p><strong>Appium </strong></p>\r\n\r\n<ul>\r\n	<li>Appium mobil test aracı a&ccedil;ık kaynak kodlu ve her &uuml;&ccedil; platformda da yani native, hybrid, mobil web ortamlarında test yapılmasına olanak sağlamaktadır.</li>\r\n	<li>Appium otomatize edilen testlerin ger&ccedil;ek cihazlarda, em&uuml;lat&ouml;rlerde ve simulatorde koşulmasına olanak sağlamaktadır.</li>\r\n	<li>G&uuml;ncel her iki platform olan iOS ve Android&rsquo; i aynı tool &uuml;zerinden test edebiliyor olmak farklı platformlar i&ccedil;in farklı toollar kullanma zahmetinin ve maliyetinin &ouml;n&uuml;ne ge&ccedil;ilmiş oluyor.</li>\r\n	<li>Otomasyon testlerinin geliştirilmesi sırasında back-end API&rsquo;lara ve veritabanlarına test kodundan erişim sağlar, b&ouml;ylece otomasyon kodlarının zenginleştirilmesine izin verir.</li>\r\n	<li>Appium ile Mobil cihaz desteğinin yetersiz kaldığı durumlarda Amazon web servis, xamarin, saucelabs esnek &ccedil;&ouml;z&uuml;mleri kullanılabilir.</li>\r\n	<li>Java gibi OO temelli dilleri desteklediği i&ccedil;in, kodlama sırasında reusability &amp; modularity pratikleri kullanılabilmektedir.</li>\r\n	<li>Apache cordova (HTML, CSS ve JS ile mobil kod geliştirme platformu) ile appium sorunsuz şekilde &ccedil;alışabilmektedir.</li>\r\n</ul>\r\n\r\n<p>Appium mobil test aracı ile mevcut versiyon ile bir emulator ve bir android cihaz Mac ortamında aynı anda test koşulabilmektedir. Bununla birlikte, 1.4.16.1 versiyonu ile &ccedil;oklu cihaz ile test koşumunun ger&ccedil;ekleştirileceğinin m&uuml;jdesini Appium yaratıcılarında Dan Culler vermektedir.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<h2><strong>Appium Eğitimleri</strong></h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/appium_kurulumu\" target=\"_blank\">Appium Kurulumu</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/appium_kutuphaneleri\" target=\"_blank\">Appium K&uuml;t&uuml;phaneleri</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/eclipsete_appium_icin_proje_olusturma\" target=\"_blank\">Eclipse&#39;te Appium i&ccedil;in proje oluşturma</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/mobile_uygulamanin_apppackage_ve_appactivity_bilgilerini_ogrenme\" target=\"_blank\">Mobile Uygulamanın appPackage ve appActivity bilgilerini &ouml;ğrenme</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/appium_ile_%C4%B0lk_test\" target=\"_blank\">Appium ile İlk Test</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/android_cihazda_chrome_tarayici_calistirma\" target=\"_blank\">Android Cihazda Chrome Tarayıcı &Ccedil;alıştırma</a></p>\r\n	</li>\r\n	<li>\r\n	<p><a href=\"http://blog.senocak.tk/yazi/appium_inspectors\" target=\"_blank\">Appium Inspectors</a></p>\r\n	</li>\r\n	<li>\r\n	<p>&nbsp;</p>\r\n	</li>\r\n</ul>\r\n', '2017-03-22 16:06:09', '2018-10-11 09:14:28', 2, 1);
INSERT INTO `posts` (`id`, `title`, `slug`, `category_id`, `body`, `created_at`, `updated_at`, `sira`, `fixed`) VALUES
(24, 'Laravel Route Sistemi', 'laravel_route_sistemi', 7, '<p>Laravel kurulum dizininde yer alan &lsquo;routes/web.php&rsquo; dosyasını a&ccedil;ıyoruz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'/\', function () {\r\n    return view(\'welcome\');\r\n});</code></pre>\r\n\r\n<p>Bu kod, sitenizin giriş ekranı yani &lsquo;/&rsquo; i&ccedil;in &lsquo;<em><strong>welcome</strong></em>&rsquo;&nbsp;<strong><em>View&nbsp;</em></strong>dosyasının &ccedil;alışacağını belirtir. Burada yer alan &lsquo;<strong>Route::get&hellip;</strong>&rsquo; b&ouml;l&uuml;m&uuml; ise isteğin geldiği methodu belirtir. Kullanabileceğimiz methodlar;</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get($url, $callback);\r\nRoute::post($url, $callback);\r\nRoute::put($url, $callback);\r\nRoute::patch($url, $callback);\r\nRoute::delete($url, $callback);\r\nRoute::options($url, $callback);</code></pre>\r\n\r\n<p>Burada &ouml;nemli bir not belirtmekte fayda g&ouml;r&uuml;yorum. POST, PUT ve DELETE methodlarını &ccedil;ağırabilmek i&ccedil;in <em>CSRF </em>koruması yapmamız gerekli. &lsquo;<strong>$url</strong>&rsquo; gelen internet sitenizin adresi, &lsquo;<strong>$callback</strong>&rsquo; ise &ccedil;alışacak fonksiyonu belirtiyor. İlk &ouml;rneğimize bakarsak &ccedil;alışacak &lsquo;<strong>$url</strong>&rsquo; i&ccedil;in &lsquo;<strong>/</strong>&rsquo; girilmiş ve &lsquo;<strong>$callback</strong>&rsquo; i&ccedil;inse function ile başlayan b&ouml;l&uuml;m belirtilmiş. Burada fonksiyon ile beraber &lsquo;<strong>View</strong>&lsquo; &ccedil;alışması sağlanmış.&nbsp;Route ile&nbsp;<strong>Controller</strong>&nbsp;&ccedil;ağırmak i&ccedil;in aşağıdaki gibi bir kod gereklidir.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'kullanici/profil\', \'UserController@uyeGoster\');</code></pre>\r\n\r\n<p>G&ouml;rd&uuml;ğ&uuml;n&uuml;z bile kullanılacak&nbsp;<strong>Controller</strong>&nbsp;&ccedil;ağırmak i&ccedil;in &lsquo;<u><em>UserController@uyeGoster</em></u>&rsquo; kullanıyoruz. Bu değişkende ilk &ouml;nce&nbsp;<strong>Controller&nbsp;</strong>ismi daha sonrada fonksiyonun adı kullanılmalıdır.</p>\r\n\r\n<h2><strong>Laravel Route İsimlendirme</strong></h2>\r\n\r\n<p>Laravel route i&ccedil;in isimlendirme (<strong>Name</strong>) kullanımı sistem i&ccedil;erisinde route i&ccedil;in link verebilmeyi kolaylaştırmak i&ccedil;in yapılır.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'kullanici/profil\', \'UserController@uyeGoster\')-&gt;name(\'profil\');</code></pre>\r\n\r\n<p>Yukarıdaki &ouml;rnekte bu route i&ccedil;in isimlendirme kullandık. Bu isimlendirmeyi laravel view i&ccedil;erisinde de şu şekilde kullanıyoruz;</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">route(\'profil\');</code></pre>\r\n\r\n<p>Bu sayede route i&ccedil;in gerekli link otomatik olarak oluşturulacaktır.</p>\r\n\r\n<h2><strong>Laravel Route Gruplandırma</strong></h2>\r\n\r\n<p>Gruplandırma&nbsp;<strong>middleware, namespace, prefix</strong>&nbsp;gibi bir&ccedil;ok route bağlantısı olan durumlar i&ccedil;in uygundur.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::namespace(\'Admin\')-&gt;group(function () {\r\n      Route::get(\'yonetici\', \'UserController@yoneticiGoster\');\r\n});</code></pre>\r\n\r\n<p>Yukarıdaki &ouml;rnekte kullanılacak olan&nbsp;<strong>Controller</strong>&nbsp;dosyalarının &lsquo;<u>Admin</u>&rsquo; klas&ouml;r&uuml; altında olduğunu belirttik. Prefix i&ccedil;in de bir &ouml;rnek verelim.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::prefix(\'admin\')-&gt;group(function () {\r\n    Route::get(\'yoneticiler\', \'UserController@yoneticiListele\');\r\n});</code></pre>\r\n\r\n<p>Bu &ouml;rnekte ise url adresinin ilk b&ouml;l&uuml;m&uuml;nde &lsquo;<em>admin</em>&rsquo; gelen bağlantıların yapılacaklarını belirttik. Daha kısa bir a&ccedil;ıklama ile buradaki route bilgisine ulaşmak i&ccedil;in gelen adresin &lsquo;admin/yoneticiler&rsquo; olması gereklidir.</p>\r\n\r\n<h2><strong>Laravel Route Parametre Kullanımı</strong></h2>\r\n\r\n<p>Route ile gelen parametreleri y&ouml;nlendirebiliriz. Bunun i&ccedil;in adresten alınabilecek parametreleri belirtmemiz gerekli.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'yonetici/{id}\', \'UserController@yoneticiGoster\');</code></pre>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'yonetici/{id?}\', \'UserController@yoneticiGoster\');</code></pre>\r\n\r\n<p>Bu kodlar birbirininden tek farkı alttakinde yer alan &lsquo;?&rsquo;. &Ouml;nce soru işareti olmayanı a&ccedil;ıklayayım. Burada adresimiz &lsquo;/yonetici/1&rsquo; olarak gelmelidir. Bu &ouml;rnekte kullanılan &lsquo;1&rsquo; id yerine ge&ccedil;er ve kodun devamında yer alan&nbsp;<strong>Controller&nbsp;</strong>i&ccedil;erisinde kullanılacak bir parametre olarak g&ouml;nderilir. İkinci kod par&ccedil;asında ise soru işareti ile anlattığımız şey parametre olabilir ya da olmayabilir demektir. Yani ilk kod ile &lsquo;yonetici&rsquo; adresini &ccedil;alıştıramayız hata alırız ama ikinci kısım ile hem &lsquo;yonetici&rsquo; hem de &lsquo;yonetici/1&rsquo; adreslerini &ccedil;alıştırabiliriz. Bunun en yaygın &ouml;rneği olarak şu senaryoyu d&uuml;ş&uuml;nebiliriz. Bir y&ouml;netim panelinde kullanıcıları listeleyecek ve bu listeden se&ccedil;ilen kullanıcının detay bilgisini g&ouml;stereceksiniz. Bunun i&ccedil;in laravel route sistemini iki şekilde yapabilirsiniz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'kullanici\', \'UserController@yoneticiGoster\');\r\nRoute::get(\'kullanici/{id}\', \'UserController@yoneticiGoster\');</code></pre>\r\n\r\n<p>veya</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Route::get(\'kullanici/{id?}\', \'UserController@yoneticiGoster\');</code></pre>\r\n\r\n<p>Tabi arada bir satır var gibi g&ouml;r&uuml;nse de oluşturacağınız sistem b&uuml;y&uuml;d&uuml;k&ccedil;e bu kullanımın yararını g&ouml;rebilirsiniz. Unutmamak gerekir ki sistemi temiz kod yani takip edilebilir/anlaşılır yazmak g&uuml;n&uuml;m&uuml;z d&uuml;nyasında son derece &ouml;nemlidir.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-26 23:44:02', '2018-10-15 05:18:40', 10, 0),
(25, 'Laravel Controller Yapısı', 'laravel_controller_yapisi', 7, '<h2><strong>Laravel Controller Nedir?</strong></h2>\r\n\r\n<p>Laravel Controller, MVC yapısında frontend ve backend arasında işlem g&ouml;ren katmandır. Bunu biraz a&ccedil;mak gerekirse; mesela kullanıcıların &ouml;ny&uuml;zde etkileşimde oldukları bir form(&uuml;ye giriş formu) ile bu formun veritabanında yapılacağı sorgular arasında işlem yapılan kısmıdır. Aslında bizim veritabanı işlemlerini ve/veya kullanıcıdan gelen verileri işleyeceğimiz b&ouml;l&uuml;md&uuml;r. Yaptığımız bu girişten sonra hemen Laravel Controller oluşturmaya başlayalım.</p>\r\n\r\n<h2><strong>Artisan Kullanarak Controller Oluşturma</strong></h2>\r\n\r\n<p>Bildiğiniz &uuml;zere Laravel sisteminde Artisan CLI (komut satırı aray&uuml;z&uuml;) bulunmaktadır. Bu aray&uuml;z bizi bir &ccedil;ok dertten kurtarır ve projelerimize hız kazandırır. Artisan aray&uuml;z&uuml;n&uuml; kullanarak Controller, Model, Migration oluşturabiliriz. Artisan ile Laravel Controller oluşturmak i&ccedil;in &ouml;ncelikle komut satırı yardımı ile sistemimizde Laravel yapısının y&uuml;kl&uuml; olduğu ana dizine erişiyoruz.</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">C:\\xampp\\htdocs\\proje_ismi</code></pre>\r\n\r\n<p>Daha sonra&nbsp;aşağıda yer alan kod bloğunu yazıyoruz(ya da kopyala yapıştır yapıyoruz).</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan make:controller AdminController</code></pre>\r\n\r\n<p>Bu kod satırında sonra bulunan &lsquo;<strong>AdminController</strong>&rsquo; bizim oluşturduğumuz Laravel Controller i&ccedil;in belirlediğimiz ad olacaktır.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/57/laravel-controller.jpg\" style=\"height:719px; width:800px\" /></p>\r\n\r\n<h2><strong>Laravel Controller</strong></h2>\r\n\r\n<p>Yazımın başında da belirttiğim gibi controller ile veritabanı işlemlerini yapabiliyoruz. Burada (belki daha &ouml;nceden de bildiğiniz)&nbsp;<strong>CRUD</strong>&nbsp;kavramından kısaca bahsetmem gerek.&nbsp;<strong>CRUD</strong>, ingilizce Create(Oluştur)-Read(Oku)-Update(G&uuml;ncelle)-Delete/Destroy(Sil) kelimelerinin baş harflerinden oluşmuş bir kısaltmadır aslında. Daha &ouml;nce kullandığımız artisan komutuna basit bir parametre ekleyerek&nbsp;<strong>CRUD</strong>&nbsp;i&ccedil;in gerekli t&uuml;m fonksiyonları oluşturabiliriz. Yine Laravel y&uuml;klediğimiz anadizine geliyor ve aşağıdaki gibi daha &ouml;nce yazdığımı kodun sonuna&nbsp;<strong>&ndash;resource</strong>&nbsp;ekliyoruz.(&Ouml;nceki &ouml;rneği &ccedil;alıştırdıysanız Controller adı farklı olmalıdır)</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan make:controller PageController --resource</code></pre>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/57/laravel-controller(1).jpg\" style=\"height:767px; width:800px\" /></p>\r\n\r\n<h2><strong>Laravel Controller Resource</strong></h2>\r\n\r\n<p>İki ekran g&ouml;r&uuml;nt&uuml;s&uuml; arasındaki farkı g&ouml;rebilirsiniz. Temel olarak CRUD i&ccedil;in gerekli t&uuml;m fonksiyonları tek bir satır ile oluşturduk. Bu fonksiyonları bira daha a&ccedil;ıklamaya &ccedil;alışayım. PageController ın Sayfa(Page) işlemleri i&ccedil;in kullanıldığını varsayalım.</p>\r\n\r\n<ul>\r\n	<li><strong>index()</strong>&nbsp;-&gt; T&uuml;m sayfaları listeme i&ccedil;in kullanılan fonksiyon,</li>\r\n	<li><strong>create()</strong>&nbsp;-&gt; Yeni bir sayfa oluşturmak i&ccedil;in kullanılacak formu oluşturan fonksiyon</li>\r\n	<li><strong>store()</strong>&nbsp;-&gt; Yeni sayfanın veritabanına yazılmasını kontrol eden fonksiyon</li>\r\n	<li><strong>edit()</strong>&nbsp;-&gt; D&uuml;zenlenecek sayfanın formunu oluşturan fonksiyon</li>\r\n	<li><strong>update()</strong>&nbsp;-&gt; D&uuml;zenlenecek sayfanın işlemlerini yapan fonksiyon</li>\r\n	<li><strong>destroy()</strong>&nbsp;-&gt; Sayfayı yok eden&nbsp;&nbsp;silinmesi i&ccedil;in kullanılan fonksiyon</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-28 07:22:39', '2018-10-15 05:18:40', 9, 0),
(26, 'Laravel Controller Veri Aktarımı', 'laravel_controller_veri_aktarimi', 7, '<h2><strong>Route ile Laravel Controller Veri Aktarımı</strong></h2>\r\n\r\n<p>Daha &ouml;nceki derslerde bahsettiğimiz gibi route Laravel yapısı i&ccedil;in gelen isteklerin y&ouml;nlendirildiği alanlardır. Yani route ile controller y&ouml;nlendirmesi yapabileceğimiz i&ccedil;in veri aktarımını da yapabilmemiz gerekli. Başka bir değişle; <strong>.htaccess</strong> ile yaptığımız php dosyalarına veri aktarımını route ile yapabiliyoruz.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/59/route-controller-veri-aktarimi-1024x535.jpg\" style=\"height:418px; width:800px\" /></p>\r\n\r\n<h2><strong>Laravel controller veri aktarımı</strong></h2>\r\n\r\n<p>Yukarıdaki ekran g&ouml;r&uuml;nt&uuml;s&uuml;nde sol b&ouml;l&uuml;m routes/web.php ve sağ b&ouml;l&uuml;mdeki g&ouml;rsel ise app/Http/Controllers/PageController.php. Sol tarafa dikkat ederseniz iki adet yeni route var. Bunlar arasındaki fark tek bir soru işaretidir. Bu soru işaretinin anlamı ise &ldquo;id&rdquo; değişkeni olabilir ya da olmayabilir olarak değerlendirilir. Yani</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">Route::get(\'sayfa/{id}\', \'PageController@index\');</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>olan kod satırı i&ccedil;in &ldquo;id&rdquo; mutlaka olmalıdır. Olmadığında route hatası alınacaktır. Fakat;</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">Route::get(\'sayfa/{id?}\', \'PageController@index\');</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>olan kod satısı i&ccedil;inse &ldquo;id&rdquo; değişkeni şart değildir. Bu şekildeki url adreslerini contoller fonksiyonunda ise değişken atayarak kullanıyoruz. Sağ tarafta bulunan index($id) fonksiyonu url adresinden gelen id yi controller i&ccedil;inde kullanılabilir duruma getiriyor.</p>\r\n\r\n<h2><strong>View ile Laravel Controller Veri Aktarımı</strong></h2>\r\n\r\n<p>Route ile gelen, controller i&ccedil;erisinde oluşturulan ve/ya veritabanı ile yapılan işlemler sonrası getirilen verilerin view tarafına ulaştırılmasıdır.</p>\r\n\r\n<p>Bu aşamada yukarıdaki ekran g&ouml;r&uuml;nt&uuml;s&uuml;n&uuml; baz aldığımızda page view&rsquo;a aktarmak i&ccedil;in;</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">return view(\'page\', compact(\'id\'));</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>ya da</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">return view(\'page\')-&gt;with(\'id\', $id);</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>Yukarıdaki kod blokları iki şekilde de aynı şekilde sonu&ccedil;lanır ve bu şekilde contorller ile view arasında veri aktarımını sağlamış oluruz. İlerki derslerde değinebilir ama yeri gelmişken view i&ccedil;erisinde bu değişkeni nasıl yazdırıldığından bahsetmek istiyorum. Blade dosyasında sadece yazdırmak i&ccedil;in</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">Gelen id: {{$id}}</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>kod bloğunu kullanabildiğimiz gibi</p>\r\n\r\n<ul>\r\n	<li>\r\n	<pre>\r\n<code class=\"language-php\">Gelen id: &lt;?php echo $id; ?&gt;</code></pre>\r\n	</li>\r\n</ul>\r\n\r\n<p>şeklinde de bildiğimiz php ile yazdırabiliriz.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-28 07:49:22', '2018-10-15 05:18:40', 8, 0),
(27, 'Laravel Blade Templates', 'laravel_blade_templates', 7, '<h2>Laravel Blade Templates</h2>\r\n\r\n<p>Blade aslında bir şablon sistemidir. İ&ccedil;erisine alışık olduğunu PHP kodlarını da yazabilmeniz bir &ccedil;ok yazılımcının Laravel &ouml;ğrenirken kendini rahat hissetmesini sağlamaktadır. Daha &ouml;nce PHP ile site ya da uygulama yazdıysanız &ouml;zellikle &uuml;st veya alt kısımlar i&ccedil;in tek bir dosya kullanıp, onu her sayfaya &lsquo;include&rsquo; ile &ccedil;ağırmışsınızdır. Bunun amacı t&uuml;m sitenizin &uuml;st kısmında yapacağınız değişikliğin tek tek her php dosyasında değil; tek bir yerden yapmanızı sağlamaktır. Laravel Blade Templates, i&ccedil;inse bu &ouml;zellik layouttur. PHP ile yaptığınız &lsquo;include&rsquo; durumundan farklı olarak burada bir ana şablon tanımlar ve diğer sayfaları bu şablonu &lsquo;extend&rsquo; ederek oluşturursunuz. Hemen bir şablon &ouml;rneği yazalım.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;@yield(\'baslik\')&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    @yield(\'icerik\')\r\n&lt;/body&gt;\r\n&lt;/html&gt;</code></pre>\r\n\r\n<p>Yukarıdaki şablona dikkat ederseniz &lsquo;title&rsquo; etiketleri arasında @yield(&lsquo;başlık&rsquo;) kodunu yerleştirdik. Bu oluşturacağımız diğer sayfalar ile bu b&ouml;l&uuml;m&uuml;n&uuml;n iletişimini sağlayacak olan kod kısmıdır. Şimdi de bir alt daha doğrusu genişletilmiş bir sayfa yazalım.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">@extends(\'sablon\')\r\n\r\n@section(\'baslik\', \'Sayfa Başlık\')\r\n\r\n@section(\'icerik\')\r\n\r\n    &lt;p&gt;Buraya içerik gelecek&lt;/p&gt;\r\n\r\n@endsection</code></pre>\r\n\r\n<p>Şablon sayfamızdaki değişkenlerle bir sayfa oluşturmak &ccedil;ok kolaylaştı. İhtiyacımız olan alanları ekleyip o alanları doldurmamız yeterli olacak. İlk satırda yer alan &lsquo;<strong>extends</strong>&rsquo; oluşturduğumuz alt sayfanın hangi &uuml;st sayfadan &ccedil;oğaltılacağını a&ccedil;ıklıyor. Daha sonrada sizin de g&ouml;receğiniz gibi baslik ve icerik i&ccedil;in gerekli alanları belirterek alt sayfanın verilerini bu alanlara yazdık. Bu şekilde alt sayfalar i&ccedil;in genel bir şablona sahip oluyoruz.</p>\r\n\r\n<h2><strong>Laravel Blade Templates D&ouml;ng&uuml;ler</strong></h2>\r\n\r\n<p>Yazılım dillerinde belki de en &ccedil;ok kullanılan terimlerdir d&ouml;ng&uuml;ler. Bu y&uuml;zden yazımda bu d&ouml;ng&uuml;lere değinmenin uygun olacağını d&uuml;ş&uuml;nd&uuml;m.</p>\r\n\r\n<p><img alt=\"\" src=\"/upload/images/60/laravel-blade-templates-1024x325.jpg\" style=\"height:286px; width:900px\" /></p>\r\n\r\n<h2><strong>Laravel Blade Templates Kullanımı</strong></h2>\r\n\r\n<p>&Uuml;stteki ekran g&ouml;r&uuml;nt&uuml;lerinde sol taraf blade ile sağ taraf ise d&uuml;z PHP ile yapılmıştır. &Ouml;zellikle sol b&ouml;l&uuml;mde se&ccedil;ili alanda &ouml;nemli bir nokta var. PHP kodlarının i&ccedil;erisine bir yazı yazdırmak istediğimizde ya PHP etiketlerini kapatmamız ya da &lsquo;echo&rsquo; kullanmamız gerekli. Fakat Laravel Blade Templates i&ccedil;in bu duruma gerek yok. D&ouml;ng&uuml;ler kendi satırlarında biter ve alt satıra indiğinizde artık orası HTML olarak okunur.</p>\r\n\r\n<p>Yine sol tarafta g&ouml;rebileceğiniz gibi değişkenler de &lsquo;<strong>{{</strong>&lsquo; ile &lsquo;<strong>}}</strong>&rsquo; arasına yazılarak kısaltılmış bir &lsquo;echo&rsquo; kullanılmış olunuyor. Kullanılan &ccedil;ift s&uuml;sl&uuml; parantezler XSS engellemen adına &lsquo;<strong>htmlspecialchars</strong>&rsquo; fonksiyonu kullanılmış hali ile gelmektedir. Yani HTML etiketleri bu değişkenden temizlenir. Siz eğer HTML etiketli halini kullanmak isterseniz &lsquo;<strong>{!!</strong>&rsquo; ile &lsquo;<strong>!!}</strong>&rsquo; arasına yazmalısınız değişkeninizi. Yine bir &ouml;rnek kod ile anlatmaya &ccedil;alışayım.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$x = \"&lt;p&gt;Buraya bir paragraf gelecek&lt;/p&gt;\";\r\n\r\n{{$x}} // çıktısı Buraya bir paragraf gelecek\r\n\r\n{!!$x!!} // çıktısı &lt;p&gt;Buraya bir paragraf gelecek&lt;/p&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>\r\n', '2018-09-28 09:29:15', '2018-10-15 05:18:40', 7, 0),
(28, 'Kotlin Nedir?', 'Kotlin-Nedir', 26, '<p>Kotlin JVM (Java Virtual Machine) &uuml;zerinde &ccedil;alışan bir programlama dilidir. Ayrıca Javascript koduna da derlenebilir (fakat biz yazı serimizde javascripte derlenme konusuna değinmeyeceğiz). Kotlin yazılım dili 2011 yılında&nbsp;<a href=\"https://www.jetbrains.com/\" rel=\"nofollow\" target=\"_blank\">JetBrains</a>&nbsp;firması tarafından geliştirilmeye başlandığı duyuruldu ve ilk stabil s&uuml;r&uuml;m&uuml;n&uuml; (v1.0) 2016 yılında yayınladı. (JetBrain firması Intellij IDEA IDE&rsquo;nin geliştiricisidir. Daha sonra Google ile birlikte Intellij IDEA tabanlı Android Studio&lsquo;yu geliştirdiler ve Android&rsquo;in resmi geliştirici ide&rsquo;si oldu. Hem android hemde java geliştiricileri i&ccedil;in Eclipse ide&rsquo;nin yerini Intellj IDEA ve Android Studio almaktadır.)</p>\r\n\r\n<p>Kotlin yazılım dili&nbsp;<a href=\"https://events.google.com/io/\" rel=\"nofollow\" target=\"_blank\">Google I/O 2017&nbsp;</a>etkinliğinde Java ve C++ dan sonra Android&rsquo;in 3. resmi geliştirici dili olarak duyurulmuştur. Bu duyurudan sonra Kotlin&rsquo;in pop&uuml;lerliğinin artması ka&ccedil;ınılmazdır. Konu hakkında videoya&nbsp;<a href=\"https://www.youtube.com/watch?v=d8ALcQiuPWs\" rel=\"nofollow\" target=\"_blank\">buradan</a>&nbsp;ulaşabilirsiniz.</p>\r\n\r\n<p>Kotlin yazılım dilini &ouml;ğrenerek hem Android uygulama geliştirebilir , hemde server-side uygulamaları geliştirebilirsiniz. Ama bunları geliştirebilmek i&ccedil;in &ouml;ncelikle&nbsp;<strong>Kotlin Yazılım</strong>&nbsp;dilinin temellerini &ouml;ğrenmelisiniz.</p>\r\n\r\n<p>Kotlin geliştirebilmek i&ccedil;in &ouml;ncelikle bilgisayarımıza&nbsp;<strong>JDK</strong>&nbsp;kurmamız gerekir. Ide olarak Intellij IDEA , Android Studio , Eclipse(JetBrains&rsquo;in geliştirdiği kotlin plugini ile) ve ya ide kullanmayıp terminal ile Kotlin uygulamalar geliştirebiliriz.</p>\r\n\r\n<ol>\r\n	<li>Kurulum</li>\r\n	<li>Değişkenler</li>\r\n	<li>Matematiksel İşlemler</li>\r\n	<li>Karar Mekanizması (İf &ndash; Else İf &ndash; When)</li>\r\n	<li>D&ouml;ng&uuml;ler</li>\r\n	<li>Fonksiyonlar</li>\r\n	<li>Kolleksiyonlar (Array, ArrayList, HashMap)</li>\r\n	<li>Nesne Y&ouml;nelimli Programla (Object Oriented Programming)</li>\r\n	<li>Hata Ayıklama (Try -Catch)</li>\r\n	<li>Multithreading</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>', '2018-09-27 23:16:56', '2018-10-11 04:40:51', 4, 1),
(29, 'Laravel Model Yapısı', 'Laravel-Model-Yapisi', 7, '<p>Laravel Model, MVC yapısında veritabanı işlemlerinin yapıldığı b&ouml;l&uuml;md&uuml;r. Daha &ouml;nceki yazılarımdan birinde Controller yapısından bahsederken, backend işlemlerinin de Controller tarafından yapıldığından bahsetmiştim. Controller, Model aracılığı ile bu işlemleri yapmaktadır. Yani Model, veritabanı iletişiminden sorumlu kısımdır.</p>\r\n\r\n<p><strong>Artisan Kullanarak Model Oluşturma</strong></p>\r\n\r\n<p>Daha &ouml;nceki yazılarımda bahsettiğim gibi Laravel Artisan CLI bizim işimizi kolaylaştırmaktadır. Bu komut satırını &ouml;ğrenmenin hız kazanma adına yararı olduğunu d&uuml;ş&uuml;n&uuml;yorum. Artisan kullanarak Laravel Model oluşturmak i&ccedil;in &ouml;ncelikle komut satırı kullanarak Laravel ana dizine erişiyoruz. Benim bilgisayarım i&ccedil;in bu adres;</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">C:\\xampp\\htdocs\\proje_ismi&gt;</code></pre>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan make:model Page</code></pre>\r\n\r\n<p>Yukarıda yer alan kod satırı sayesinde &lsquo;<strong>Page</strong>&rsquo; Model dosyasını oluşturuyoruz. Model oluşturma başarı ile sonu&ccedil;landıysa app klas&ouml;r&uuml;n&uuml;n altında Page isimli bir dosya olmuşması gereklidir.</p>\r\n\r\n<p><img alt=\"laravel model oluşturma\" src=\"/upload/images/62/laravel-model.jpg\" style=\"height:615px; width:800px\" /></p>\r\n\r\n<p>Tabi burada unutmamamız gereken Model ile kullanılacak veritabanı tablosununda olması. Bu işlem i&ccedil;in isterseniz manuel olarak bir tablo oluşturabilirsiniz ya da yine Artisan kullanarak Migration oluşturabilirsiniz.Hen&uuml;z Migration yapısından bahsetmediğimiz i&ccedil;in biz bu yazıda manuel olarak bir tablo oluşturalım. Veritabanı değişkenlerini .env dosyasından alacağız buradaki değişikliklerin yapılmış olmasına dikkat edelim.&nbsp;Yine kendi kurulumuma g&ouml;re benim .env dosyamdaki veritabanı ile ilgili kısım şu şekildedir;</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">DB_CONNECTION=mysql\r\nDB_HOST=127.0.0.1\r\nDB_PORT=3306\r\nDB_DATABASE=mobilhanem\r\nDB_USERNAME=root\r\nDB_PASSWORD=</code></pre>\r\n\r\n<p>tabi lokal bir kurulum olduğu i&ccedil;in şifre kısmı boş bırakılmıştır. Ger&ccedil;ek sunucuda bu b&ouml;l&uuml;m&uuml;n g&uuml;&ccedil;l&uuml; bir şifre ile dolu olması gereklidir. Phpmyadmin yardımı ile projemize bir veritabanı oluşturup i&ccedil;erisine pages tablosunu ekledim. Tablo yapısı ise</p>\r\n\r\n<pre>\r\n<code class=\"language-sql\">id =&gt; int 11, primary key, autoincrement\r\nbaslik =&gt; varchar 100\r\nicerik =&gt; text\r\naktif =&gt; int 1, default 0</code></pre>\r\n\r\n<p>Burada Laravel Model i&ccedil;in &ouml;nemli bir konuya dikkat etmeniz gerekmektedir. Oluşturduğunuz Model adı ile veritabanındaki tablo arasında bir ilişki vardır. Bu ilişki oluşturduğunuz tablonun, Model isminin k&uuml;&ccedil;&uuml;k harf ile başlayan ve İngilizce olarak &ccedil;oğul yapılmış hali olmasıdır.</p>\r\n\r\n<ul>\r\n	<li><strong>Page (model) =&gt; pages (tablo)</strong></li>\r\n	<li><strong>City (model) =&gt; cities (tablo)</strong></li>\r\n</ul>\r\n\r\n<p>Peki bu şart mı? tabi ki hayır fakat proje takip edilebilirliği ve hız bakımından tavsiye edilen methoddur. Diyelim ki siz bunu yapmak istemiyor veya daha &ouml;nceki projenizi Laravel yapısına taşımak istiyorsunuz. Tablo isminizi &lsquo;sayfalar&rsquo; olarak kullanmak i&ccedil;in Laravel Model i&ccedil;erisine &nbsp;$table değişkeni belirtmeniz gerekli.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $table = \'sayfalar\';</code></pre>\r\n\r\n<p>Yine aynı şekilde Primary Key olarak id kullanmayacaksanız eğer onu da,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $primaryKey = \'sayfa_id\';</code></pre>\r\n\r\n<p>olarak belirtmeniz gerekli.</p>\r\n\r\n<p>Yukarıda bahsettiğim gibi bu yazıda Migration yapısını anlatmayacağım fakat Migration kullanarak oluşturulan tablolarda timestamps değişkeni vardır. Bu değişken tablonuza &lsquo;created_at&rsquo; ve &lsquo;updated_at&rsquo; kolonları ekler. Biz manuel oluşturduğumuz tablomuza bunları eklemediğimiz i&ccedil;in Model yapımıza bunları tabloda aramaması gerektiğini s&ouml;ylememiz gerek. Yoksa Model hata oluşturacaktır. Bunun i&ccedil;in,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public $timestamps = false;</code></pre>\r\n\r\n<p>satırı Model i&ccedil;erisine eklememiz gereklidir.</p>\r\n\r\n<p>Laravel Model yapısında hangi kolonun yazılabilir olduğu sizin tarafınızdan mutlaka belirtilmelidir. Yukarıdaki &ouml;rnek tablomuzda &lsquo;<strong>aktif</strong>&rsquo; kolonunun değiştirilmesini istemediğimizi d&uuml;ş&uuml;n&uuml;rsek bunun i&ccedil;in Model i&ccedil;erisine</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $fillable = [\'baslik\',\'icerik\'];</code></pre>\r\n\r\n<p>Burada g&ouml;rd&uuml;ğ&uuml;n&uuml;z gibi &lsquo;aktif&rsquo; ve &lsquo;id&rsquo; kolonlarımız yok. Bunların olmaması Laravel sistemine bunların manip&uuml;le edilmemesi gerektiği, korunması gerektiğini belirtir. Yani buraya yazmadığımız kolonlar Controller ile değiştirilemez. Laravel i&ccedil;in bu bir &ccedil;eşit g&uuml;venlik &ouml;nlemidir ve bu &ouml;nlem Mass Assignment olarak adlandırılır.</p>\r\n\r\n<p>Eğer biz t&uuml;m alanların değiştirilebilir olmasını istiyorsak ya da sadece &lsquo;id&rsquo; kolonunun korunmasını istiyorsak ve tablomuzda 30 adet kolon varsa bunu tek tek yazmamız mı gerekecek? Tabi ki hayır. S&uuml;rekli bizim iyiliğimizi d&uuml;ş&uuml;nen Laravel bunun i&ccedil;inde &ccedil;&ouml;z&uuml;m oluşturmuş &lsquo;guarded&rsquo;.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $guarded = [];</code></pre>\r\n\r\n<p>ya da</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $guarded = [\'id\'];</code></pre>\r\n\r\n<p>Bu şekilde belirttiğimiz kolonlar harici olanların hepsinin değiştirilebilir olduğunu belirtmiş oluyoruz.</p>\r\n\r\n<p>Son olarak yukarıdaki kod satırlarının Model i&ccedil;erisindeki yerleşimi aşağıda yer alan resimdeki gibi olmalıdır.</p>\r\n\r\n<p><img alt=\"laravel model son hali\" src=\"/upload/images/62/laravel-model(1).jpg\" style=\"height:395px; width:800px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref:&nbsp;<a href=\"https://www.mobilhanem.com/laravel-dersleri-laravel-nedir/\" target=\"_blank\">laravel-dersleri</a></p>', '2018-10-01 07:09:49', '2018-10-22 10:10:05', 6, 0),
(30, '20 Laravel Eloquent İpuçları', '20-Laravel-Eloquent-İpuclari', 7, '<h3>1. Increments ve Decrements</h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">$article = Article::find($article_id);\r\n$article-&gt;read_count++;\r\n$article-&gt;save();\r\n</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$article = Article::find($article_id);\r\n$article-&gt;increment(\'read_count\');\r\n</code></pre>\r\n\r\n<p>veya</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">Article::find($article_id)-&gt;increment(\'read_count\');\r\nArticle::find($article_id)-&gt;increment(\'read_count\', 10); // +10\r\nProduct::find($produce_id)-&gt;decrement(\'stock\'); // -1\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>2. XorY metodları</h3>\r\n\r\n<p>Eloquent iki metodu birleştiren bika&ccedil; metodu var.</p>\r\n\r\n<p><strong>&Ouml;rnek 1</strong>&nbsp;&ndash;&nbsp;<code>findOrFail()</code>:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$user = User::find($id);\r\nif (!$user) { abort (404); }\r\n</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$user = User::findOrFail($id);\r\n</code></pre>\r\n\r\n<p><strong>&Ouml;rnek 2</strong>&nbsp;&ndash;&nbsp;<code>firstOrCreate()</code>:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$user = User::where(\'email\', $email)-&gt;first();\r\nif (!$user) {\r\n  User::create([\r\n    \'email\' =&gt; $email\r\n  ]);\r\n}\r\n</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$user = User::firstOrCreate([\'email\' =&gt; $email]);\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>3. Model boot() metodu</h3>\r\n\r\n<p>Eloquent modelinde varsayılan davranışı değiştirmek i&ccedil;in&nbsp;<code>boot()</code>&nbsp;metodu vardır.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">class User extends Model{\r\n    public static function boot(){\r\n        parent::boot();\r\n        static::updating(function($model){\r\n            // do some logging\r\n            // override some property like $model-&gt;something = transform($something);\r\n        });\r\n    }\r\n}</code></pre>\r\n\r\n<p><a href=\"https://github.com/webpatser/laravel-uuid\" target=\"_blank\">UUID field</a>&nbsp;alanını oluşturmak istediğimizi d&uuml;ş&uuml;nelim.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public static function boot(){\r\n  parent::boot();\r\n  self::creating(function ($model) {\r\n    $model-&gt;uuid = (string)Uuid::generate();\r\n  });\r\n}</code></pre>\r\n\r\n<hr />\r\n<h3>4. Koşullu ilişkilendirme ve sıralama</h3>\r\n\r\n<p>İlişkiyi oluşturmanın tipik yolu,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public function users() {\r\n    return $this-&gt;hasMany(\'App\\User\');    \r\n}\r\n</code></pre>\r\n\r\n<p>Bu noktada <em>where </em>ve <em>orderby </em>ifadelerini kullanabiliriz. &Ouml;rnek olarak kullanıcılar i&ccedil;in spesifik ilişki veya email&#39;e g&ouml;re sıralamak istiyorsak,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public function approvedUsers() {\r\n    return $this-&gt;hasMany(\'App\\User\')-&gt;where(\'approved\', 1)-&gt;orderBy(\'email\');\r\n}\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>5. Model &ouml;zellikleri: timestamps, appends vb.</h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">class User extends Model {\r\n    protected $table = \'users\';\r\n    protected $fillable = [\'email\', \'password\']; // which fields can be filled with User::create()\r\n    protected $dates = [\'created_at\', \'deleted_at\']; // which fields will be Carbon-ized\r\n    protected $appends = [\'field1\', \'field2\']; // additional values returned in JSON\r\n}\r\n</code></pre>\r\n\r\n<p>ve</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected $primaryKey = \'uuid\'; // it doesn\'t have to be \"id\"\r\npublic $incrementing = false; // and it doesn\'t even have to be auto-incrementing!\r\nprotected $perPage = 25; // Yes, you can override pagination count PER MODEL (default 15)\r\nconst CREATED_AT = \'created_at\';\r\nconst UPDATED_AT = \'updated_at\'; // Yes, even those names can be overridden\r\npublic $timestamps = false; // or even not used at all\r\n</code></pre>\r\n\r\n<p><a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Database/Eloquent/Model.php\">Abstract Model class</a>&nbsp;adresinde daha fazlasını bulabilirsiniz.</p>\r\n\r\n<hr />\r\n<h3>6. &Ccedil;oklu kayıt bulma</h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">$user = User::find(1);\r\n</code></pre>\r\n\r\n<p><em>find </em>komutu i&ccedil;erisine birden fazla id g&ouml;nderebiliyoruz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$users = User::find([1,2,3]);\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>7. WhereX</h3>\r\n\r\n<p>Controller sınıfımızdan view dosyalarımıza bir değer g&ouml;ndermek istediğimiz zaman nasıl <em>with </em>komutu yerine <em>withDeger </em>komutunu kullanabiliyorsak aynı işlemi <em>where </em>i&ccedil;inde kullanabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$users = User::where(\'approved\', 1)-&gt;get();\r\n</code></pre>\r\n\r\n<p>yerine</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$users = User::whereApproved(1)-&gt;get(); \r\n</code></pre>\r\n\r\n<p>Ayrıca, aynı yapıyı tarih işlemleri i&ccedil;inde yapabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">User::whereDate(\'created_at\', date(\'Y-m-d\'));\r\nUser::whereDay(\'created_at\', date(\'d\'));\r\nUser::whereMonth(\'created_at\', date(\'m\'));\r\nUser::whereYear(\'created_at\', date(\'Y\'));\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>8. Order by ilişkisi</h3>\r\n\r\n<p>&Ouml;rnek olarak db de en son g&uuml;ncellenen yazıları en &uuml;ste taşımak istersek bu yapıyı kullanabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public function latestPost(){\r\n    return $this-&gt;hasOne(\\App\\Post::class)-&gt;latest();\r\n}\r\n</code></pre>\r\n\r\n<p>Controller dosyamızda,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$users = Topic::with(\'latestPost\')-&gt;get()-&gt;sortByDesc(\'latestPost.created_at\');\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>9. Eloquent::when() &ndash; no more if-else&rsquo;s</h3>\r\n\r\n<p>&Ccedil;oğumuz aşağıdaki gibi &ldquo;if-else&rdquo; sorgusu yazarız.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">if (request(\'filter_by\') == \'likes\') {\r\n    $query-&gt;where(\'likes\', \'&gt;\', request(\'likes_amount\', 0));\r\n}\r\nif (request(\'filter_by\') == \'date\') {\r\n    $query-&gt;orderBy(\'created_at\', request(\'ordering_rule\', \'desc\'));\r\n}\r\n</code></pre>\r\n\r\n<p>Ama daha iyi bir yapı var;&nbsp;<code>when()</code>:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$query = Author::query();\r\n$query-&gt;when(request(\'filter_by\') == \'likes\', function ($q) {\r\n    return $q-&gt;where(\'likes\', \'&gt;\', request(\'likes_amount\', 0));\r\n});\r\n$query-&gt;when(request(\'filter_by\') == \'date\', function ($q) {\r\n    return $q-&gt;orderBy(\'created_at\', request(\'ordering_rule\', \'desc\'));\r\n});\r\n</code></pre>\r\n\r\n<p>Daha kısa veya hoş g&ouml;r&uuml;lmeyebilir ama &ccedil;ok daha g&uuml;&ccedil;l&uuml; bir yapıdır.</p>\r\n\r\n<pre>\r\n<code>$query = User::query();\r\n$query-&gt;when(request(\'role\', false), function ($q, $role) { \r\n    return $q-&gt;where(\'role_id\', $role);\r\n});\r\n$authors = $query-&gt;get();\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>10. BelongsTo&nbsp;</h3>\r\n\r\n<p>&Ouml;rneğin Post ve Author tablomuz ilişkili,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">{{ $post-&gt;author-&gt;name }}\r\n</code></pre>\r\n\r\n<p>Peki ya Author silindi yada bir şekilde ayarlanmadı. &ldquo;<em>property of non-object</em>&rdquo; diye bir hata alırız. Bunu &ouml;n&uuml;ne ge&ccedil;ebiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">{{ $post-&gt;author-&gt;name ?? \'\' }}\r\n</code></pre>\r\n\r\n<p>Ama ilişki tanımlama sırasında bunu default olarak yapabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public function author(){\r\n    return $this-&gt;belongsTo(\'App\\Author\')-&gt;withDefault();\r\n}\r\n</code></pre>\r\n\r\n<p>Bu &ouml;rnekte, yazar eklenmemiş ise&nbsp;<code>author()</code>&nbsp;ilişkisi <code>App\\Author</code>&nbsp;modelinden boş gelecektir. B&ouml;ylece, varsayılan olarak author kısmını tanımlayabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">public function author(){\r\n    return $this-&gt;belongsTo(\'App\\Author\')-&gt;withDefault([\r\n        \'name\' =&gt; \'Yazar Tanımlanmamış\'\r\n    ]);\r\n}\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>11. Order by Mutator</h3>\r\n\r\n<p>B&ouml;yle bir kodumuz olduğunu d&uuml;ş&uuml;nelim.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">function getFullNameAttribute(){\r\n  return $this-&gt;attributes[\'first_name\'] . \' \' . $this-&gt;attributes[\'last_name\'];\r\n}\r\n</code></pre>\r\n\r\n<p>Şimdi de <code>full_name e&nbsp;</code>g&ouml;re sıralayalım? &Ccedil;alışmayacaktır.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$clients = Client::orderBy(\'full_name\')-&gt;get(); // doesn\'t work\r\n</code></pre>\r\n\r\n<p>&Ccedil;&ouml;z&uuml;m basit, sıralamayı değerler bize d&ouml;nd&uuml;kten sonra yapalım.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$clients = Client::get()-&gt;sortBy(\'full_name\'); // works!\r\n</code></pre>\r\n\r\n<p>Note: Fonksiyon ismine dikkat:&nbsp;<strong>orderBy</strong>&nbsp;değil&nbsp;<strong>sortBy</strong>.</p>\r\n\r\n<hr />\r\n<h3>12. K&uuml;resel kapsamda varsayılan sıralama</h3>\r\n\r\n<p><code>User::all()</code>&nbsp;kodunda varsayılan olarak <code>name</code>&nbsp;alanına g&ouml;re sıralama yapacaktır. <em><code>boot()</code></em>&nbsp;metoduna d&ouml;nelim ve;</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">protected static function boot(){\r\n    parent::boot();\r\n    // Order by name ASC\r\n    static::addGlobalScope(\'order\', function (Builder $builder) {\r\n        $builder-&gt;orderBy(\'name\', \'asc\');\r\n    });\r\n}\r\n</code></pre>\r\n\r\n<p><a href=\"https://laravel.com/docs/5.6/eloquent#query-scopes\" target=\"_blank\">Daha fazlası i&ccedil;in,</a>.</p>\r\n\r\n<hr />\r\n<h3>13. Raw query methods</h3>\r\n\r\n<p>Bazen Eloquent&nbsp; durumlarımıza saf sorgular eklememiz gerekli olur şansımıza bunlar i&ccedil;in fonksiyonlar vardır.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">// whereRaw\r\n$orders = DB::table(\'orders\')\r\n    -&gt;whereRaw(\'price &gt; IF(state = \"TX\", ?, 100)\', [200])\r\n    -&gt;get();\r\n\r\n// havingRaw\r\nProduct::groupBy(\'category_id\')-&gt;havingRaw(\'COUNT(*) &gt; 1\')-&gt;get();\r\n\r\n// orderByRaw\r\nUser::where(\'created_at\', \'&gt;\', \'2016-01-01\')\r\n  -&gt;orderByRaw(\'(updated_at - created_at) desc\')\r\n  -&gt;get();\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>14. Replicate: Kopya oluşturma</h3>\r\n\r\n<p>Kısaca,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$task = Tasks::find(1);\r\n$newTask = $task-&gt;replicate();\r\n$newTask-&gt;save();\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>15. B&uuml;y&uuml;k tablolar i&ccedil;in chunk() metodu</h3>\r\n\r\n<p>K&uuml;&ccedil;&uuml;k par&ccedil;alara b&ouml;lerek &ccedil;alışabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$users = User::all();\r\nforeach ($users as $user) {\r\n    // ...\r\n</code></pre>\r\n\r\n<p>yerine,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">User::chunk(100, function ($users) {\r\n    foreach ($users as $user) {\r\n        // ...\r\n    }\r\n});\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>16. Create additional things when creating a model</h3>\r\n\r\n<p>Artisan komutunu biliyoruz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan make:model Company\r\n</code></pre>\r\n\r\n<p>Ama, ilişkili alanları oluşturmak i&ccedil;in 3 adet flag olduğunu biliyor muydunuz?</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">php artisan make:model Company -mcr\r\n</code></pre>\r\n\r\n<ul>\r\n	<li>-m, <strong>migration</strong></li>\r\n	<li>-c, <strong>controller</strong></li>\r\n	<li>-r ,<strong>resourceful&nbsp;</strong>dosyalarımızı oluşturmaya yarar.</li>\r\n</ul>\r\n\r\n<hr />\r\n<h3>17. G&uuml;ncelleme yaptığımızda updated_at s&uuml;tunu&nbsp;override</h3>\r\n\r\n<p><em><code>-&gt;save()</code></em>&nbsp;metodun parametre alabiliyor.&nbsp;Sonu&ccedil; olarak, ilgili kısmı g&uuml;ncellememesi i&ccedil;in parametre olarak belirtebiliyoruz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$product = Product::find($id);\r\n$product-&gt;updated_at = \'2019-01-01 10:00:00\';\r\n$product-&gt;save([\'timestamps\' =&gt; false]);\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>18. update() &ccedil;ıktısı?</h3>\r\n\r\n<p>Hi&ccedil; d&uuml;ş&uuml;nd&uuml;n&uuml;z m&uuml; kod ger&ccedil;ekten hangi değerleri g&ouml;nderiyor.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$result = $products-&gt;whereNull(\'category_id\')-&gt;update([\'category_id\' =&gt; 2]);\r\n</code></pre>\r\n\r\n<p>Cevap, etkilenen satırlardır. Dolayısıyla, ka&ccedil; satırın etkilendiğini kontrol etmeniz gerekiyorsa, başka bir şeyi aramanıza gerek yoktur; update () y&ouml;ntemi bu sayıyı sizin yerinize d&ouml;nd&uuml;r&uuml;r.</p>\r\n\r\n<hr />\r\n<h3>19. Parantezleri bir Eloquent sorgusuna d&ouml;n&uuml;şt&uuml;r&uuml;n</h3>\r\n\r\n<p>SQL sorgunuzda and-or kısımlarını karıştırabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">... WHERE (gender = \'Male\' and age &gt;= 18) or (gender = \'Female\' and age &gt;= 65)\r\n</code></pre>\r\n\r\n<p>Yanlış,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$q-&gt;where(\'gender\', \'Male\');\r\n$q-&gt;orWhere(\'age\', \'&gt;=\', 18);\r\n$q-&gt;where(\'gender\', \'Female\');\r\n$q-&gt;orWhere(\'age\', \'&gt;=\', 65);\r\n</code></pre>\r\n\r\n<p>Karışık olabilir ama doğrusu,</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$q-&gt;where(function ($query) {\r\n    $query-&gt;where(\'gender\', \'Male\')\r\n        -&gt;where(\'age\', \'&gt;=\', 18);\r\n})-&gt;orWhere(function($query) {\r\n    $query-&gt;where(\'gender\', \'Female\')\r\n        -&gt;where(\'age\', \'&gt;=\', 65); \r\n})\r\n</code></pre>\r\n\r\n<hr />\r\n<h3>20. &Ccedil;oklu parametreler ile&nbsp;orWhere</h3>\r\n\r\n<pre>\r\n<code class=\"language-php\">$q-&gt;where(\'a\', 1);\r\n$q-&gt;orWhere(\'b\', 2);\r\n$q-&gt;orWhere(\'c\', 3);\r\n</code></pre>\r\n\r\n<p>Bu şekilde de kullanabiliriz.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$q-&gt;where(\'a\', 1);\r\n$q-&gt;orWhere([\'b\' =&gt; 2, \'c\' =&gt; 3]);\r\n</code></pre>\r\n\r\n<hr />\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ref :&nbsp;<a href=\"https://laravel-news.com/eloquent-tips-tricks\" target=\"_blank\">laravel-news.com</a></p>', '2018-10-15 05:18:31', '2018-10-22 10:32:07', 5, 0);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `post_tag`
--

CREATE TABLE `post_tag` (
  `id` int(10) UNSIGNED NOT NULL,
  `post_id` int(10) UNSIGNED NOT NULL,
  `tag_id` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `post_tag`
--

INSERT INTO `post_tag` (`id`, `post_id`, `tag_id`) VALUES
(16, 5, 3),
(17, 24, 5),
(20, 23, 3),
(21, 22, 3),
(24, 26, 5),
(25, 28, 8),
(26, 28, 9),
(27, 29, 4),
(28, 29, 5),
(29, 29, 6),
(30, 30, 4),
(31, 30, 5),
(32, 30, 6);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `tags`
--

CREATE TABLE `tags` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `tags`
--

INSERT INTO `tags` (`id`, `name`, `created_at`, `updated_at`) VALUES
(2, 'APPIUM', '2018-10-07 05:38:04', '2018-10-10 11:24:00'),
(3, 'SELENIUM', '2018-10-07 05:38:09', '2018-10-10 11:23:55'),
(4, 'LARAVEL', '2018-10-07 12:29:09', '2018-10-10 11:23:50'),
(5, 'PHP', '2018-10-07 12:29:12', '2018-10-10 11:23:45'),
(6, 'MVC', '2018-10-07 12:29:15', '2018-10-10 11:23:35'),
(8, 'KOTLIN', '2018-10-11 04:40:59', '2018-10-11 04:41:15'),
(9, 'JAVA', '2018-10-11 04:41:21', '2018-10-11 04:41:21');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `users`
--

CREATE TABLE `users` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `picture` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `password` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `about` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `admin` int(11) NOT NULL DEFAULT '0',
  `linkedin` varchar(150) COLLATE utf8mb4_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Tablo döküm verisi `users`
--

INSERT INTO `users` (`id`, `name`, `email`, `picture`, `password`, `remember_token`, `created_at`, `updated_at`, `about`, `admin`, `linkedin`) VALUES
(1, 'Anıl Şenocak', 'asenocak@netas.com.tr', 'Anil_senocak.jpg', '$2y$10$/1VXu9lbvNo34T/H5uYMmuO7oaGLQ.0m.7XsA4rNJJqL9.jKfz11C', 'UX5mPbpCRCV0IU0097mVO0IWxdJ2t4UHitTHSLwP61i2BfkAhGjQkOHuCqeA', '2018-10-06 10:06:32', '2018-10-13 07:59:19', '<p><iframe frameborder=\"0\" height=\"600\" scrolling=\"yes\" src=\"http://blog.senocak.tk/cv.pdf\" width=\"900\"></iframe></p>', 1, 'anilsenocak27');

--
-- Dökümü yapılmış tablolar için indeksler
--

--
-- Tablo için indeksler `ayar`
--
ALTER TABLE `ayar`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `comments_post_id_foreign` (`post_id`);

--
-- Tablo için indeksler `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `post_tag`
--
ALTER TABLE `post_tag`
  ADD PRIMARY KEY (`id`),
  ADD KEY `post_tag_post_id_foreign` (`post_id`),
  ADD KEY `post_tag_tag_id_foreign` (`tag_id`);

--
-- Tablo için indeksler `tags`
--
ALTER TABLE `tags`
  ADD PRIMARY KEY (`id`);

--
-- Tablo için indeksler `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- Dökümü yapılmış tablolar için AUTO_INCREMENT değeri
--

--
-- Tablo için AUTO_INCREMENT değeri `ayar`
--
ALTER TABLE `ayar`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- Tablo için AUTO_INCREMENT değeri `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=31;

--
-- Tablo için AUTO_INCREMENT değeri `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- Tablo için AUTO_INCREMENT değeri `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- Tablo için AUTO_INCREMENT değeri `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=43;

--
-- Tablo için AUTO_INCREMENT değeri `post_tag`
--
ALTER TABLE `post_tag`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=46;

--
-- Tablo için AUTO_INCREMENT değeri `tags`
--
ALTER TABLE `tags`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;

--
-- Tablo için AUTO_INCREMENT değeri `users`
--
ALTER TABLE `users`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- Dökümü yapılmış tablolar için kısıtlamalar
--

--
-- Tablo kısıtlamaları `comments`
--
ALTER TABLE `comments`
  ADD CONSTRAINT `comments_post_id_foreign` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`) ON DELETE CASCADE;

--
-- Tablo kısıtlamaları `post_tag`
--
ALTER TABLE `post_tag`
  ADD CONSTRAINT `post_tag_post_id_foreign` FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`),
  ADD CONSTRAINT `post_tag_tag_id_foreign` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
